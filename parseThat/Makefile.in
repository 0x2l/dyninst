# ----------------------------------------------
# Configuration variables taken from ./configure
# ----------------------------------------------
CPPFLAGS     = @CPPFLAGS@
CXX          = @CXX@
CXXFLAGS     = @CXXFLAGS@
DEFINES      = @DEFS@
LDFLAGS      = @LDFLAGS@
DWARFFLAGS      = @DWARFFLAGS@
ELFFLAGS      = @ELFFLAGS@
LIBS         = @LIBS@
DEMANGLER_LINK = @LIBERTYFLAGS@
prefix       = @prefix@
PLATFORM    ?= @build@
DYNINST_VER  = @DYNINST_VER@

INSTALL      = @INSTALL@

vpath % @srcdir@/src

# -------------------------------------------
# Begin Makefile based on variables set above
# -------------------------------------------
.PHONY: clean ready

SRCS         = parseThat.C \
               config.C \
               ipc.C \
               record.C \
               strlist.C \
               reglist.C \
               log.C \
               utils.C \
               sha1.C \
               dyninstCore.C

ifeq ($(DYNINST_VER), 5)
SRCS        += dyninstCompat.v5.C
endif

ifeq ($(DYNINST_VER), 4)
SRCS        += dyninstCompat.v4.C
endif

OBJS         = $(SRCS:%.C=%.o)

CXXFLAGS    += -Wall
LIBS        += -ldyninstAPI -lsymtabAPI -lparseAPI -lpcontrol -lstackwalk -lparseAPI -lpatchAPI -lcommon -ldl -pthread

# The echo will remove the quotes
LIBS += $(shell echo $(DEMANGLER_LINK))

ifneq (x,x$(strip $(ELFFLAGS)))
LIBS += $(ELFFLAGS)
endif
ifneq (x,x$(strip $(DWARFFLAGS)))
LIBS += $(DWARFFLAGS)
endif

ifneq (, $(findstring sparc, $(PLATFORM)))
LIBS        += -lstdc++ -lsocket -lrt
endif

ifneq (, $(findstring i386, $(PLATFORM)))
LIBS        += -linstructionAPI
endif

ifneq (, $(findstring i486, $(PLATFORM)))
LIBS        += -linstructionAPI
endif

ifneq (, $(findstring i586, $(PLATFORM)))
LIBS        += -linstructionAPI
endif

ifneq (, $(findstring i686, $(PLATFORM)))
LIBS        += -linstructionAPI
endif

ifneq (, $(findstring x86_64, $(PLATFORM)))
LIBS        += -linstructionAPI
endif

ifneq (, $(findstring ppc32, $(PLATFORM)))
LIBS        += -linstructionAPI
endif

ifneq (, $(findstring ppc32_bgp, $(PLATFORM)))
LIBS        += -linstructionAPI
endif

ifneq (, $(findstring ppc64_linux, $(PLATFORM)))
LIBS        += -linstructionAPI
CXXFLAGS    += -m64
endif

ifneq (, $(findstring alpha, $(PLATFORM)))
CXXFLAGS    += -pthread
endif

ifneq (, $(findstring ia64, $(PLATFORM)))
LIBS        += -ldl
endif

ifeq (freebsd, $(findstring freebsd, $(PLATFORM)))
LIBS	    += -lpthread
endif

all: ready parseThat

install: $(prefix)/parseThat

$(prefix)/parseThat: parseThat
	@if [ $(prefix) != "." ]; then                           \
		echo "$(INSTALL) -d $(prefix)";                  \
		$(INSTALL) -d $(prefix);                         \
		echo "$(INSTALL) parseThat $(prefix)/parseThat"; \
		$(INSTALL) parseThat $(prefix)/parseThat;        \
	fi

clean:
	rm -f parseThat *.o *.so

distclean: clean
	rm Makefile config.log config.status

ready:
	@echo "Begin parseThat build for $(PLATFORM)"

parseThat: $(OBJS)
	$(CXX) $(CXXFLAGS) $^ -o $@ $(LDFLAGS) $(LIBS)

$(OBJS): %.o: %.C
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(DEFINES) $^ -c -o $@

alarm: alarm.c liblib.so
	gcc -Wall -g -o alarm alarm.c liblib.so

liblib.so: lib.c
	gcc -Wall -g -shared -o liblib.so lib.c
