enum {
  aarch64_op_INVALID,
  aarch64_op_extended,
  aarch64_op_adc,
  aarch64_op_adcs,
  aarch64_op_add_addsub_ext,
  aarch64_op_add_addsub_imm,
  aarch64_op_add_addsub_shift,
  aarch64_op_adds_addsub_ext,
  aarch64_op_adds_addsub_imm,
  aarch64_op_adds_addsub_shift,
  aarch64_op_adr,
  aarch64_op_adrp,
  aarch64_op_and_log_imm,
  aarch64_op_and_log_shift,
  aarch64_op_ands_log_imm,
  aarch64_op_ands_log_shift,
  aarch64_op_asr_asrv,
  aarch64_op_asr_sbfm,
  aarch64_op_asrv,
  aarch64_op_at_sys,
  aarch64_op_b_cond,
  aarch64_op_b_uncond,
  aarch64_op_bfi_bfm,
  aarch64_op_bfm,
  aarch64_op_bfxil_bfm,
  aarch64_op_bic_log_shift,
  aarch64_op_bics,
  aarch64_op_bl,
  aarch64_op_blr,
  aarch64_op_br,
  aarch64_op_brk,
  aarch64_op_cbnz,
  aarch64_op_cbz,
  aarch64_op_ccmn_imm,
  aarch64_op_ccmn_reg,
  aarch64_op_ccmp_imm,
  aarch64_op_ccmp_reg,
  aarch64_op_cinc_csinc,
  aarch64_op_cinv_csinv,
  aarch64_op_clrex,
  aarch64_op_cls_int,
  aarch64_op_clz_int,
  aarch64_op_cmn_adds_addsub_ext,
  aarch64_op_cmn_adds_addsub_imm,
  aarch64_op_cmn_adds_addsub_shift,
  aarch64_op_cmp_subs_addsub_ext,
  aarch64_op_cmp_subs_addsub_imm,
  aarch64_op_cmp_subs_addsub_shift,
  aarch64_op_cneg_csneg,
  aarch64_op_crc32,
  aarch64_op_crc32c,
  aarch64_op_csel,
  aarch64_op_cset_csinc,
  aarch64_op_csetm_csinv,
  aarch64_op_csinc,
  aarch64_op_csinv,
  aarch64_op_csneg,
  aarch64_op_dc_sys,
  aarch64_op_dcps1,
  aarch64_op_dcps2,
  aarch64_op_dcps3,
  aarch64_op_dmb,
  aarch64_op_drps,
  aarch64_op_dsb,
  aarch64_op_eon,
  aarch64_op_eor_log_imm,
  aarch64_op_eor_log_shift,
  aarch64_op_eret,
  aarch64_op_extr,
  aarch64_op_hint,
  aarch64_op_hlt,
  aarch64_op_hvc,
  aarch64_op_ic_sys,
  aarch64_op_isb,
  aarch64_op_ldar,
  aarch64_op_ldarb,
  aarch64_op_ldarh,
  aarch64_op_ldaxp,
  aarch64_op_ldaxr,
  aarch64_op_ldaxrb,
  aarch64_op_ldaxrh,
  aarch64_op_ldnp_gen,
  aarch64_op_ldp_gen,
  aarch64_op_ldpsw,
  aarch64_op_ldr_imm_gen,
  aarch64_op_ldr_lit_gen,
  aarch64_op_ldr_reg_gen,
  aarch64_op_ldrb_imm,
  aarch64_op_ldrb_reg,
  aarch64_op_ldrh_imm,
  aarch64_op_ldrh_reg,
  aarch64_op_ldrsb_imm,
  aarch64_op_ldrsb_reg,
  aarch64_op_ldrsh_imm,
  aarch64_op_ldrsh_reg,
  aarch64_op_ldrsw_imm,
  aarch64_op_ldrsw_lit,
  aarch64_op_ldrsw_reg,
  aarch64_op_ldtr,
  aarch64_op_ldtrb,
  aarch64_op_ldtrh,
  aarch64_op_ldtrsb,
  aarch64_op_ldtrsh,
  aarch64_op_ldtrsw,
  aarch64_op_ldur_gen,
  aarch64_op_ldurb,
  aarch64_op_ldurh,
  aarch64_op_ldursb,
  aarch64_op_ldursh,
  aarch64_op_ldursw,
  aarch64_op_ldxp,
  aarch64_op_ldxr,
  aarch64_op_ldxrb,
  aarch64_op_ldxrh,
  aarch64_op_lsl_lslv,
  aarch64_op_lsl_ubfm,
  aarch64_op_lslv,
  aarch64_op_lsr_lsrv,
  aarch64_op_lsr_ubfm,
  aarch64_op_lsrv,
  aarch64_op_madd,
  aarch64_op_mneg_msub,
  aarch64_op_mov_add_addsub_imm,
  aarch64_op_mov_movn,
  aarch64_op_mov_movz,
  aarch64_op_mov_orr_log_imm,
  aarch64_op_mov_orr_log_shift,
  aarch64_op_movk,
  aarch64_op_movn,
  aarch64_op_movz,
  aarch64_op_mrs,
  aarch64_op_msr_imm,
  aarch64_op_msr_reg,
  aarch64_op_msub,
  aarch64_op_mul_madd,
  aarch64_op_mvn_orn_log_shift,
  aarch64_op_neg_sub_addsub_shift,
  aarch64_op_negs_subs_addsub_shift,
  aarch64_op_ngc_sbc,
  aarch64_op_ngcs_sbcs,
  aarch64_op_nop_hint,
  aarch64_op_orn_log_shift,
  aarch64_op_orr_log_imm,
  aarch64_op_orr_log_shift,
  aarch64_op_prfm_imm,
  aarch64_op_prfm_lit,
  aarch64_op_prfm_reg,
  aarch64_op_prfum,
  aarch64_op_rbit_int,
  aarch64_op_ret,
  aarch64_op_rev,
  aarch64_op_rev16_int,
  aarch64_op_rev32_int,
  aarch64_op_ror_extr,
  aarch64_op_ror_rorv,
  aarch64_op_rorv,
  aarch64_op_sbc,
  aarch64_op_sbcs,
  aarch64_op_sbfiz_sbfm,
  aarch64_op_sbfm,
  aarch64_op_sbfx_sbfm,
  aarch64_op_sdiv,
  aarch64_op_sev_hint,
  aarch64_op_sevl_hint,
  aarch64_op_smaddl,
  aarch64_op_smc,
  aarch64_op_smnegl_smsubl,
  aarch64_op_smsubl,
  aarch64_op_smulh,
  aarch64_op_smull_smaddl,
  aarch64_op_stlr,
  aarch64_op_stlrb,
  aarch64_op_stlrh,
  aarch64_op_stlxp,
  aarch64_op_stlxr,
  aarch64_op_stlxrb,
  aarch64_op_stlxrh,
  aarch64_op_stnp_gen,
  aarch64_op_stp_gen,
  aarch64_op_str_imm_gen,
  aarch64_op_str_reg_gen,
  aarch64_op_strb_imm,
  aarch64_op_strb_reg,
  aarch64_op_strh_imm,
  aarch64_op_strh_reg,
  aarch64_op_sttr,
  aarch64_op_sttrb,
  aarch64_op_sttrh,
  aarch64_op_stur_gen,
  aarch64_op_sturb,
  aarch64_op_sturh,
  aarch64_op_stxp,
  aarch64_op_stxr,
  aarch64_op_stxrb,
  aarch64_op_stxrh,
  aarch64_op_sub_addsub_ext,
  aarch64_op_sub_addsub_imm,
  aarch64_op_sub_addsub_shift,
  aarch64_op_subs_addsub_ext,
  aarch64_op_subs_addsub_imm,
  aarch64_op_subs_addsub_shift,
  aarch64_op_svc,
  aarch64_op_sxtb_sbfm,
  aarch64_op_sxth_sbfm,
  aarch64_op_sxtw_sbfm,
  aarch64_op_sys,
  aarch64_op_sysl,
  aarch64_op_tbnz,
  aarch64_op_tbz,
  aarch64_op_tlbi_sys,
  aarch64_op_tst_ands_log_imm,
  aarch64_op_tst_ands_log_shift,
  aarch64_op_ubfiz_ubfm,
  aarch64_op_ubfm,
  aarch64_op_ubfx_ubfm,
  aarch64_op_udiv,
  aarch64_op_umaddl,
  aarch64_op_umnegl_umsubl,
  aarch64_op_umsubl,
  aarch64_op_umulh,
  aarch64_op_umull_umaddl,
  aarch64_op_uxtb_ubfm,
  aarch64_op_uxth_ubfm,
  aarch64_op_wfe_hint,
  aarch64_op_wfi_hint,
  aarch64_op_yield_hint,
}
number of instructions:  224
0            unallocated    0b11000000000000000000000000000 ( 0x18000000 )
1                    adc 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010000000000000000000000000 ( 0x1a000000 )
2                   adcs 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00111010000000000000000000000000 ( 0x3a000000 )
3         add_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	00001011001000000000000000000000 ( 0xb200000 )
4         add_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	00010001000000000000000000000000 ( 0x11000000 )
5       add_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00001011000000000000000000000000 ( 0xb000000 )
6        adds_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	00101011001000000000000000000000 ( 0x2b200000 )
7        adds_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110001000000000000000000000000 ( 0x31000000 )
8      adds_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00101011000000000000000000000000 ( 0x2b000000 )
9                    adr 	10011111000000000000000000000000 ( 0x9f000000 ) 	00010000000000000000000000000000 ( 0x10000000 )
10                   adrp 	10011111000000000000000000000000 ( 0x9f000000 ) 	10010000000000000000000000000000 ( 0x90000000 )
11            and_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010010000000000000000000000000 ( 0x12000000 )
12          and_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00001010000000000000000000000000 ( 0xa000000 )
13           ands_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01110010000000000000000000000000 ( 0x72000000 )
14         ands_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01101010000000000000000000000000 ( 0x6a000000 )
15               asr_asrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010100000000000 ( 0x1ac02800 )
16               asr_sbfm 	01111111100000000111110000000000 ( 0x7f807c00 ) 	00010011000000000111110000000000 ( 0x13007c00 )
17                   asrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010100000000000 ( 0x1ac02800 )
18                 at_sys 	11111111111110001111111100000000 ( 0xfff8ff00 ) 	11010101000010000111100000000000 ( 0xd5087800 )
19                 b_cond 	11111111000000000000000000010000 ( 0xff000010 ) 	01010100000000000000000000000000 ( 0x54000000 )
20               b_uncond 	11111100000000000000000000000000 ( 0xfc000000 ) 	00010100000000000000000000000000 ( 0x14000000 )
21                bfi_bfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110011000000000000000000000000 ( 0x33000000 )
22                    bfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110011000000000000000000000000 ( 0x33000000 )
23              bfxil_bfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110011000000000000000000000000 ( 0x33000000 )
24          bic_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00001010001000000000000000000000 ( 0xa200000 )
25                   bics 	01111111001000000000000000000000 ( 0x7f200000 ) 	01101010001000000000000000000000 ( 0x6a200000 )
26                     bl 	11111100000000000000000000000000 ( 0xfc000000 ) 	10010100000000000000000000000000 ( 0x94000000 )
27                    blr 	11111111111111111111110000011111 ( 0xfffffc1f ) 	11010110001111110000000000000000 ( 0xd63f0000 )
28                     br 	11111111111111111111110000011111 ( 0xfffffc1f ) 	11010110000111110000000000000000 ( 0xd61f0000 )
29                    brk 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100001000000000000000000000 ( 0xd4200000 )
30                   cbnz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110101000000000000000000000000 ( 0x35000000 )
31                    cbz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110100000000000000000000000000 ( 0x34000000 )
32               ccmn_imm 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	00111010010000000000100000000000 ( 0x3a400800 )
33               ccmn_reg 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	00111010010000000000000000000000 ( 0x3a400000 )
34               ccmp_imm 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	01111010010000000000100000000000 ( 0x7a400800 )
35               ccmp_reg 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	01111010010000000000000000000000 ( 0x7a400000 )
36             cinc_csinc 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	00011010100000000000010000000000 ( 0x1a800400 )
37             cinv_csinv 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000000000000000 ( 0x5a800000 )
38                  clrex 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000001011111 ( 0xd503305f )
39                cls_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000001010000000000 ( 0x5ac01400 )
40                clz_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000001000000000000 ( 0x5ac01000 )
41    cmn_adds_addsub_ext 	01111111111000000000000000011111 ( 0x7fe0001f ) 	00101011001000000000000000011111 ( 0x2b20001f )
42    cmn_adds_addsub_imm 	01111111000000000000000000011111 ( 0x7f00001f ) 	00110001000000000000000000011111 ( 0x3100001f )
43  cmn_adds_addsub_shift 	01111111001000000000000000011111 ( 0x7f20001f ) 	00101011000000000000000000011111 ( 0x2b00001f )
44    cmp_subs_addsub_ext 	01111111111000000000000000011111 ( 0x7fe0001f ) 	01101011001000000000000000011111 ( 0x6b20001f )
45    cmp_subs_addsub_imm 	01111111000000000000000000011111 ( 0x7f00001f ) 	01110001000000000000000000011111 ( 0x7100001f )
46  cmp_subs_addsub_shift 	01111111001000000000000000011111 ( 0x7f20001f ) 	01101011000000000000000000011111 ( 0x6b00001f )
47             cneg_csneg 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000010000000000 ( 0x5a800400 )
48                  crc32 	01111111111000001111000000000000 ( 0x7fe0f000 ) 	00011010110000000100000000000000 ( 0x1ac04000 )
49                 crc32c 	01111111111000001111000000000000 ( 0x7fe0f000 ) 	00011010110000000101000000000000 ( 0x1ac05000 )
50                   csel 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	00011010100000000000000000000000 ( 0x1a800000 )
51             cset_csinc 	01111111111111110000111111100000 ( 0x7fff0fe0 ) 	00011010100111110000011111100000 ( 0x1a9f07e0 )
52            csetm_csinv 	01111111111111110000111111100000 ( 0x7fff0fe0 ) 	01011010100111110000001111100000 ( 0x5a9f03e0 )
53                  csinc 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	00011010100000000000010000000000 ( 0x1a800400 )
54                  csinv 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000000000000000 ( 0x5a800000 )
55                  csneg 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000010000000000 ( 0x5a800400 )
56                 dc_sys 	11111111111110001111000000000000 ( 0xfff8f000 ) 	11010101000010000111000000000000 ( 0xd5087000 )
57                  dcps1 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100101000000000000000000001 ( 0xd4a00001 )
58                  dcps2 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100101000000000000000000010 ( 0xd4a00002 )
59                  dcps3 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100101000000000000000000011 ( 0xd4a00003 )
60                    dmb 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000010111111 ( 0xd50330bf )
61                   drps 	11111111111111111111111111111111 ( 0xffffffff ) 	11010110101111110000001111100000 ( 0xd6bf03e0 )
62                    dsb 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000010011111 ( 0xd503309f )
63                    eon 	01111111001000000000000000000000 ( 0x7f200000 ) 	01001010001000000000000000000000 ( 0x4a200000 )
64            eor_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010010000000000000000000000000 ( 0x52000000 )
65          eor_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01001010000000000000000000000000 ( 0x4a000000 )
66                   eret 	11111111111111111111111111111111 ( 0xffffffff ) 	11010110100111110000001111100000 ( 0xd69f03e0 )
67                   extr 	01111111101000000000000000000000 ( 0x7fa00000 ) 	00010011100000000000000000000000 ( 0x13800000 )
68                   hint 	11111111111111111111000000011111 ( 0xfffff01f ) 	11010101000000110010000000011111 ( 0xd503201f )
69                    hlt 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100010000000000000000000000 ( 0xd4400000 )
70                    hvc 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100000000000000000000000010 ( 0xd4000002 )
71                 ic_sys 	11111111111110001111000000000000 ( 0xfff8f000 ) 	11010101000010000111000000000000 ( 0xd5087000 )
72                    isb 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000011011111 ( 0xd50330df )
73                   ldar 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000110000001000000000000000 ( 0x88c08000 )
74                  ldarb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000110000001000000000000000 ( 0x8c08000 )
75                  ldarh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000110000001000000000000000 ( 0x48c08000 )
76                  ldaxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000011000001000000000000000 ( 0x88608000 )
77                  ldaxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000010000001000000000000000 ( 0x88408000 )
78                 ldaxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000010000001000000000000000 ( 0x8408000 )
79                 ldaxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000010000001000000000000000 ( 0x48408000 )
80               ldnp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000010000000000000000000000 ( 0x28400000 )
81                ldp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000110000000000000000000000 ( 0x28c00000 )
82                ldp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101001110000000000000000000000 ( 0x29c00000 )
83                ldp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101001010000000000000000000000 ( 0x29400000 )
84                  ldpsw 	11111111110000000000000000000000 ( 0xffc00000 ) 	01101000110000000000000000000000 ( 0x68c00000 )
85                  ldpsw 	11111111110000000000000000000000 ( 0xffc00000 ) 	01101001110000000000000000000000 ( 0x69c00000 )
86                  ldpsw 	11111111110000000000000000000000 ( 0xffc00000 ) 	01101001010000000000000000000000 ( 0x69400000 )
87            ldr_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000010000000000010000000000 ( 0xb8400400 )
88            ldr_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000010000000000110000000000 ( 0xb8400c00 )
89            ldr_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111001010000000000110000000000 ( 0xb9400c00 )
90            ldr_lit_gen 	10111111000000000000000000000000 ( 0xbf000000 ) 	00011000000000000000000000000000 ( 0x18000000 )
91            ldr_reg_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000011000000000100000000000 ( 0xb8600800 )
92               ldrb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000010000000000010000000000 ( 0x38400400 )
93               ldrb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000010000000000110000000000 ( 0x38400c00 )
94               ldrb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111001010000000000110000000000 ( 0x39400c00 )
95               ldrb_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000011000000000100000000000 ( 0x38600800 )
96               ldrh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000010000000000010000000000 ( 0x78400400 )
97               ldrh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000010000000000110000000000 ( 0x78400c00 )
98               ldrh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111001010000000000110000000000 ( 0x79400c00 )
99               ldrh_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000011000000000100000000000 ( 0x78600800 )
100              ldrsb_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000100000000000010000000000 ( 0x38800400 )
101              ldrsb_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000100000000000110000000000 ( 0x38800c00 )
102              ldrsb_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111001100000000000110000000000 ( 0x39800c00 )
103              ldrsb_reg 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000101000000000100000000000 ( 0x38a00800 )
104              ldrsh_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000100000000000010000000000 ( 0x78800400 )
105              ldrsh_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000100000000000110000000000 ( 0x78800c00 )
106              ldrsh_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111001100000000000110000000000 ( 0x79800c00 )
107              ldrsh_reg 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000101000000000100000000000 ( 0x78a00800 )
108              ldrsw_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000100000000000010000000000 ( 0xb8800400 )
109              ldrsw_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000100000000000110000000000 ( 0xb8800c00 )
110              ldrsw_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111001100000000000110000000000 ( 0xb9800c00 )
111              ldrsw_lit 	11111111000000000000000000000000 ( 0xff000000 ) 	10011000000000000000000000000000 ( 0x98000000 )
112              ldrsw_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000101000000000100000000000 ( 0xb8a00800 )
113                   ldtr 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000010000000000100000000000 ( 0xb8400800 )
114                  ldtrb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000010000000000100000000000 ( 0x38400800 )
115                  ldtrh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000010000000000100000000000 ( 0x78400800 )
116                 ldtrsb 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000100000000000100000000000 ( 0x38800800 )
117                 ldtrsh 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000100000000000100000000000 ( 0x78800800 )
118                 ldtrsw 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000100000000000100000000000 ( 0xb8800800 )
119               ldur_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000010000000000000000000000 ( 0xb8400000 )
120                  ldurb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000010000000000000000000000 ( 0x38400000 )
121                  ldurh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000010000000000000000000000 ( 0x78400000 )
122                 ldursb 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000100000000000000000000000 ( 0x38800000 )
123                 ldursh 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000100000000000000000000000 ( 0x78800000 )
124                 ldursw 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000100000000000000000000000 ( 0xb8800000 )
125                   ldxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000011000000000000000000000 ( 0x88600000 )
126                   ldxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000010000000000000000000000 ( 0x88400000 )
127                  ldxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000010000000000000000000000 ( 0x8400000 )
128                  ldxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000010000000000000000000000 ( 0x48400000 )
129               lsl_lslv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010000000000000 ( 0x1ac02000 )
130               lsl_ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
131                   lslv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010000000000000 ( 0x1ac02000 )
132               lsr_lsrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010010000000000 ( 0x1ac02400 )
133               lsr_ubfm 	01111111100000000111110000000000 ( 0x7f807c00 ) 	01010011000000000111110000000000 ( 0x53007c00 )
134                   lsrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010010000000000 ( 0x1ac02400 )
135                   madd 	01111111111000001000000000000000 ( 0x7fe08000 ) 	00011011000000000000000000000000 ( 0x1b000000 )
136              mneg_msub 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011011000000001111110000000000 ( 0x1b00fc00 )
137     mov_add_addsub_imm 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	00010001000000000000000000000000 ( 0x11000000 )
138               mov_movn 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010010100000000000000000000000 ( 0x12800000 )
139               mov_movz 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010010100000000000000000000000 ( 0x52800000 )
140        mov_orr_log_imm 	01111111100000000000001111100000 ( 0x7f8003e0 ) 	00110010000000000000001111100000 ( 0x320003e0 )
141      mov_orr_log_shift 	01111111111000001111111111100000 ( 0x7fe0ffe0 ) 	00101010000000000000001111100000 ( 0x2a0003e0 )
142                   movk 	01111111100000000000000000000000 ( 0x7f800000 ) 	01110010100000000000000000000000 ( 0x72800000 )
143                   movn 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010010100000000000000000000000 ( 0x12800000 )
144                   movz 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010010100000000000000000000000 ( 0x52800000 )
145                    mrs 	11111111111100000000000000000000 ( 0xfff00000 ) 	11010101001100000000000000000000 ( 0xd5300000 )
146                msr_imm 	11111111111110001111000000011111 ( 0xfff8f01f ) 	11010101000000000100000000011111 ( 0xd500401f )
147                msr_reg 	11111111111100000000000000000000 ( 0xfff00000 ) 	11010101000100000000000000000000 ( 0xd5100000 )
148                   msub 	01111111111000001000000000000000 ( 0x7fe08000 ) 	00011011000000001000000000000000 ( 0x1b008000 )
149               mul_madd 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011011000000000111110000000000 ( 0x1b007c00 )
150      mvn_orn_log_shift 	01111111001000000000001111100000 ( 0x7f2003e0 ) 	00101010001000000000001111100000 ( 0x2a2003e0 )
151   neg_sub_addsub_shift 	01111111001000000000001111100000 ( 0x7f2003e0 ) 	01001011000000000000001111100000 ( 0x4b0003e0 )
152 negs_subs_addsub_shift 	01111111001000000000001111100000 ( 0x7f2003e0 ) 	01101011000000000000001111100000 ( 0x6b0003e0 )
153                ngc_sbc 	01111111111000001111111111100000 ( 0x7fe0ffe0 ) 	01011010000000000000001111100000 ( 0x5a0003e0 )
154              ngcs_sbcs 	01111111111000001111111111100000 ( 0x7fe0ffe0 ) 	01111010000000000000001111100000 ( 0x7a0003e0 )
155               nop_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000000011111 ( 0xd503201f )
156          orn_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00101010001000000000000000000000 ( 0x2a200000 )
157            orr_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110010000000000000000000000000 ( 0x32000000 )
158          orr_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00101010000000000000000000000000 ( 0x2a000000 )
159               prfm_imm 	11111111110000000000000000000000 ( 0xffc00000 ) 	11111001100000000000000000000000 ( 0xf9800000 )
160               prfm_lit 	11111111000000000000000000000000 ( 0xff000000 ) 	11011000000000000000000000000000 ( 0xd8000000 )
161               prfm_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	11111000101000000000100000000000 ( 0xf8a00800 )
162                  prfum 	11111111111000000000110000000000 ( 0xffe00c00 ) 	11111000100000000000000000000000 ( 0xf8800000 )
163               rbit_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000000000000000000 ( 0x5ac00000 )
164                    ret 	11111111111111111111110000011111 ( 0xfffffc1f ) 	11010110010111110000000000000000 ( 0xd65f0000 )
165                    rev 	01111111111111111111100000000000 ( 0x7ffff800 ) 	01011010110000000000100000000000 ( 0x5ac00800 )
166              rev16_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000000010000000000 ( 0x5ac00400 )
167              rev32_int 	11111111111111111111110000000000 ( 0xfffffc00 ) 	11011010110000000000100000000000 ( 0xdac00800 )
168               ror_extr 	01111111101000000000000000000000 ( 0x7fa00000 ) 	00010011100000000000000000000000 ( 0x13800000 )
169               ror_rorv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010110000000000 ( 0x1ac02c00 )
170                   rorv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010110000000000 ( 0x1ac02c00 )
171                    sbc 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	01011010000000000000000000000000 ( 0x5a000000 )
172                   sbcs 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	01111010000000000000000000000000 ( 0x7a000000 )
173             sbfiz_sbfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010011000000000000000000000000 ( 0x13000000 )
174                   sbfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010011000000000000000000000000 ( 0x13000000 )
175              sbfx_sbfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010011000000000000000000000000 ( 0x13000000 )
176                   sdiv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000000110000000000 ( 0x1ac00c00 )
177               sev_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000010011111 ( 0xd503209f )
178              sevl_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000010111111 ( 0xd50320bf )
179                 smaddl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011001000000000000000000000 ( 0x9b200000 )
180                    smc 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100000000000000000000000011 ( 0xd4000003 )
181          smnegl_smsubl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011001000001111110000000000 ( 0x9b20fc00 )
182                 smsubl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011001000001000000000000000 ( 0x9b208000 )
183                  smulh 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011010000000000000000000000 ( 0x9b400000 )
184           smull_smaddl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011001000000111110000000000 ( 0x9b207c00 )
185                   stlr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000100000001000000000000000 ( 0x88808000 )
186                  stlrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000100000001000000000000000 ( 0x8808000 )
187                  stlrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000100000001000000000000000 ( 0x48808000 )
188                  stlxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000001000001000000000000000 ( 0x88208000 )
189                  stlxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000000000001000000000000000 ( 0x88008000 )
190                 stlxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000000000001000000000000000 ( 0x8008000 )
191                 stlxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000000000001000000000000000 ( 0x48008000 )
192               stnp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000000000000000000000000000 ( 0x28000000 )
193                stp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000100000000000000000000000 ( 0x28800000 )
194                stp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101001100000000000000000000000 ( 0x29800000 )
195                stp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101001000000000000000000000000 ( 0x29000000 )
196            str_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000000000000000010000000000 ( 0xb8000400 )
197            str_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000000000000000110000000000 ( 0xb8000c00 )
198            str_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111001000000000000110000000000 ( 0xb9000c00 )
199            str_reg_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000001000000000100000000000 ( 0xb8200800 )
200               strb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000000000000000010000000000 ( 0x38000400 )
201               strb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000000000000000110000000000 ( 0x38000c00 )
202               strb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111001000000000000110000000000 ( 0x39000c00 )
203               strb_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000001000000000100000000000 ( 0x38200800 )
204               strh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000000000000000010000000000 ( 0x78000400 )
205               strh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000000000000000110000000000 ( 0x78000c00 )
206               strh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111001000000000000110000000000 ( 0x79000c00 )
207               strh_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000001000000000100000000000 ( 0x78200800 )
208                   sttr 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000000000000000100000000000 ( 0xb8000800 )
209                  sttrb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000000000000000100000000000 ( 0x38000800 )
210                  sttrh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000000000000000100000000000 ( 0x78000800 )
211               stur_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000000000000000000000000000 ( 0xb8000000 )
212                  sturb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000000000000000000000000000 ( 0x38000000 )
213                  sturh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000000000000000000000000000 ( 0x78000000 )
214                   stxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000001000000000000000000000 ( 0x88200000 )
215                   stxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000000000000000000000000000 ( 0x88000000 )
216                  stxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000000000000000000000000000 ( 0x8000000 )
217                  stxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000000000000000000000000000 ( 0x48000000 )
218         sub_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	01001011001000000000000000000000 ( 0x4b200000 )
219         sub_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	01010001000000000000000000000000 ( 0x51000000 )
220       sub_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01001011000000000000000000000000 ( 0x4b000000 )
221        subs_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	01101011001000000000000000000000 ( 0x6b200000 )
222        subs_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	01110001000000000000000000000000 ( 0x71000000 )
223      subs_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01101011000000000000000000000000 ( 0x6b000000 )
224                    svc 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100000000000000000000000001 ( 0xd4000001 )
225              sxtb_sbfm 	01111111101111111111110000000000 ( 0x7fbffc00 ) 	00010011000000000001110000000000 ( 0x13001c00 )
226              sxth_sbfm 	01111111101111111111110000000000 ( 0x7fbffc00 ) 	00010011000000000011110000000000 ( 0x13003c00 )
227              sxtw_sbfm 	11111111111111111111110000000000 ( 0xfffffc00 ) 	10010011010000000111110000000000 ( 0x93407c00 )
228                    sys 	11111111111110000000000000000000 ( 0xfff80000 ) 	11010101000010000000000000000000 ( 0xd5080000 )
229                   sysl 	11111111111110000000000000000000 ( 0xfff80000 ) 	11010101001010000000000000000000 ( 0xd5280000 )
230                   tbnz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110111000000000000000000000000 ( 0x37000000 )
231                    tbz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110110000000000000000000000000 ( 0x36000000 )
232               tlbi_sys 	11111111111110001111000000000000 ( 0xfff8f000 ) 	11010101000010001000000000000000 ( 0xd5088000 )
233       tst_ands_log_imm 	01111111100000000000000000011111 ( 0x7f80001f ) 	01110010000000000000000000011111 ( 0x7200001f )
234     tst_ands_log_shift 	01111111001000000000000000011111 ( 0x7f20001f ) 	01101010000000000000000000011111 ( 0x6a00001f )
235             ubfiz_ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
236                   ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
237              ubfx_ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
238                   udiv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000000100000000000 ( 0x1ac00800 )
239                 umaddl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011101000000000000000000000 ( 0x9ba00000 )
240          umnegl_umsubl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011101000001111110000000000 ( 0x9ba0fc00 )
241                 umsubl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011101000001000000000000000 ( 0x9ba08000 )
242                  umulh 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011110000000000000000000000 ( 0x9bc00000 )
243           umull_umaddl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011101000000111110000000000 ( 0x9ba07c00 )
244              uxtb_ubfm 	11111111111111111111110000000000 ( 0xfffffc00 ) 	01010011000000000001110000000000 ( 0x53001c00 )
245              uxth_ubfm 	11111111111111111111110000000000 ( 0xfffffc00 ) 	01010011000000000011110000000000 ( 0x53003c00 )
246               wfe_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000001011111 ( 0xd503205f )
247               wfi_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000001111111 ( 0xd503207f )
248             yield_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000000111111 ( 0xd503203f )
249
*** instruction table ***
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_unallocated, 	"unallocated	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_adc, 	"adc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_adcs, 	"adcs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_add_addsub_ext, 	"add	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_add_addsub_imm, 	"add	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_add_addsub_shift, 	"add	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_adds_addsub_ext, 	"adds	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_adds_addsub_imm, 	"adds	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_adds_addsub_shift, 	"adds	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_adr, 	"adr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_adrp, 	"adrp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_and_log_imm, 	"and	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_and_log_shift, 	"and	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ands_log_imm, 	"ands	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ands_log_shift, 	"ands	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_asr_asrv, 	"asr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_asr_sbfm, 	"asr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_asrv, 	"asrv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_at_sys, 	"at	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_b_cond, 	"b	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_b_uncond, 	"b	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_bfi_bfm, 	"bfi	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_bfm, 	"bfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_bfxil_bfm, 	"bfxil	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_bic_log_shift, 	"bic	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_bics, 	"bics	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_bl, 	"bl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_blr, 	"blr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_br, 	"br	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_brk, 	"brk	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cbnz, 	"cbnz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cbz, 	"cbz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ccmn_imm, 	"ccmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ccmn_reg, 	"ccmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ccmp_imm, 	"ccmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ccmp_reg, 	"ccmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cinc_csinc, 	"cinc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cinv_csinv, 	"cinv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_clrex, 	"clrex	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cls_int, 	"cls	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_clz_int, 	"clz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cmn_adds_addsub_ext, 	"cmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cmn_adds_addsub_imm, 	"cmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cmn_adds_addsub_shift, 	"cmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cmp_subs_addsub_ext, 	"cmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cmp_subs_addsub_imm, 	"cmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cmp_subs_addsub_shift, 	"cmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cneg_csneg, 	"cneg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_crc32, 	"crc32	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_crc32c, 	"crc32c	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_csel, 	"csel	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_cset_csinc, 	"cset	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_csetm_csinv, 	"csetm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_csinc, 	"csinc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_csinv, 	"csinv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_csneg, 	"csneg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_dc_sys, 	"dc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_dcps1, 	"dcps1	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_dcps2, 	"dcps2	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_dcps3, 	"dcps3	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_dmb, 	"dmb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_drps, 	"drps	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_dsb, 	"dsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_eon, 	"eon	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_eor_log_imm, 	"eor	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_eor_log_shift, 	"eor	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_eret, 	"eret	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_extr, 	"extr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_hint, 	"hint	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_hlt, 	"hlt	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_hvc, 	"hvc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ic_sys, 	"ic	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_isb, 	"isb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldar, 	"ldar	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldarb, 	"ldarb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldarh, 	"ldarh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldaxp, 	"ldaxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldaxr, 	"ldaxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldaxrb, 	"ldaxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldaxrh, 	"ldaxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldnp_gen, 	"ldnp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldp_gen, 	"ldp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldp_gen, 	"ldp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldp_gen, 	"ldp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldpsw, 	"ldpsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldpsw, 	"ldpsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldpsw, 	"ldpsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldr_imm_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldr_imm_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldr_imm_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldr_lit_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldr_reg_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrb_imm, 	"ldrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrb_imm, 	"ldrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrb_imm, 	"ldrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrb_reg, 	"ldrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrh_imm, 	"ldrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrh_imm, 	"ldrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrh_imm, 	"ldrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrh_reg, 	"ldrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsb_imm, 	"ldrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsb_imm, 	"ldrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsb_imm, 	"ldrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsb_reg, 	"ldrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsh_imm, 	"ldrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsh_imm, 	"ldrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsh_imm, 	"ldrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsh_reg, 	"ldrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsw_imm, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsw_imm, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsw_imm, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsw_lit, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldrsw_reg, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldtr, 	"ldtr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldtrb, 	"ldtrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldtrh, 	"ldtrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldtrsb, 	"ldtrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldtrsh, 	"ldtrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldtrsw, 	"ldtrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldur_gen, 	"ldur	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldurb, 	"ldurb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldurh, 	"ldurh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldursb, 	"ldursb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldursh, 	"ldursh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldursw, 	"ldursw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldxp, 	"ldxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldxr, 	"ldxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldxrb, 	"ldxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ldxrh, 	"ldxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_lsl_lslv, 	"lsl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_lsl_ubfm, 	"lsl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_lslv, 	"lslv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_lsr_lsrv, 	"lsr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_lsr_ubfm, 	"lsr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_lsrv, 	"lsrv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_madd, 	"madd	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mneg_msub, 	"mneg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mov_add_addsub_imm, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mov_movn, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mov_movz, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mov_orr_log_imm, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mov_orr_log_shift, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_movk, 	"movk	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_movn, 	"movn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_movz, 	"movz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mrs, 	"mrs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_msr_imm, 	"msr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_msr_reg, 	"msr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_msub, 	"msub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mul_madd, 	"mul	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_mvn_orn_log_shift, 	"mvn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_neg_sub_addsub_shift, 	"neg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_negs_subs_addsub_shift, 	"negs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ngc_sbc, 	"ngc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ngcs_sbcs, 	"ngcs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_nop_hint, 	"nop	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_orn_log_shift, 	"orn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_orr_log_imm, 	"orr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_orr_log_shift, 	"orr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_prfm_imm, 	"prfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_prfm_lit, 	"prfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_prfm_reg, 	"prfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_prfum, 	"prfum	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_rbit_int, 	"rbit	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ret, 	"ret	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_rev, 	"rev	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_rev16_int, 	"rev16	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_rev32_int, 	"rev32	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ror_extr, 	"ror	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ror_rorv, 	"ror	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_rorv, 	"rorv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sbc, 	"sbc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sbcs, 	"sbcs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sbfiz_sbfm, 	"sbfiz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sbfm, 	"sbfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sbfx_sbfm, 	"sbfx	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sdiv, 	"sdiv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sev_hint, 	"sev	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sevl_hint, 	"sevl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_smaddl, 	"smaddl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_smc, 	"smc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_smnegl_smsubl, 	"smnegl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_smsubl, 	"smsubl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_smulh, 	"smulh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_smull_smaddl, 	"smull	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stlr, 	"stlr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stlrb, 	"stlrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stlrh, 	"stlrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stlxp, 	"stlxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stlxr, 	"stlxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stlxrb, 	"stlxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stlxrh, 	"stlxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stnp_gen, 	"stnp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stp_gen, 	"stp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stp_gen, 	"stp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stp_gen, 	"stp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_str_imm_gen, 	"str	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_str_imm_gen, 	"str	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_str_imm_gen, 	"str	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_str_reg_gen, 	"str	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strb_imm, 	"strb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strb_imm, 	"strb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strb_imm, 	"strb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strb_reg, 	"strb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strh_imm, 	"strh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strh_imm, 	"strh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strh_imm, 	"strh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_strh_reg, 	"strh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sttr, 	"sttr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sttrb, 	"sttrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sttrh, 	"sttrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stur_gen, 	"stur	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sturb, 	"sturb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sturh, 	"sturh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stxp, 	"stxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stxr, 	"stxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stxrb, 	"stxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_stxrh, 	"stxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sub_addsub_ext, 	"sub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sub_addsub_imm, 	"sub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sub_addsub_shift, 	"sub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_subs_addsub_ext, 	"subs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_subs_addsub_imm, 	"subs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_subs_addsub_shift, 	"subs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_svc, 	"svc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sxtb_sbfm, 	"sxtb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sxth_sbfm, 	"sxth	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sxtw_sbfm, 	"sxtw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sys, 	"sys	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_sysl, 	"sysl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_tbnz, 	"tbnz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_tbz, 	"tbz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_tlbi_sys, 	"tlbi	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_tst_ands_log_imm, 	"tst	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_tst_ands_log_shift, 	"tst	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ubfiz_ubfm, 	"ubfiz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ubfm, 	"ubfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_ubfx_ubfm, 	"ubfx	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_udiv, 	"udiv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_umaddl, 	"umaddl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_umnegl_umsubl, 	"umnegl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_umsubl, 	"umsubl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_umulh, 	"umulh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_umull_umaddl, 	"umull	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_uxtb_ubfm, 	"uxtb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_uxth_ubfm, 	"uxth	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_wfe_hint, 	"wfe	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_wfi_hint, 	"wfi	", list_of() ));
	aarch64_insn_table.push_back(aarch64_insn_entry(aarch64_op_yield_hint, 	"yield	", list_of() ));
*** decoder table ***
	aarch_decoder_table[0]=aarch64_mask_entry(0x18000000, map_list_of(0,1)(1,2)(2,3)(3,4),-1);
	aarch_decoder_table[1]=aarch64_mask_entry(0x0, branchMap(),0);
	aarch_decoder_table[2]=aarch64_mask_entry(0x27000000, map_list_of(0,5)(2,6)(3,7)(8,8)(9,9)(10,10)(11,11),-1);
	aarch_decoder_table[5]=aarch64_mask_entry(0x80e08000, map_list_of(0,12)(1,13)(4,14)(5,15)(9,16)(13,17)(16,18)(17,19)(18,20)(19,21)(20,22)(21,23)(22,24)(23,25)(25,26)(29,27),-1);
	aarch_decoder_table[12]=aarch64_mask_entry(0x40000000, map_list_of(0,28)(1,29),-1);
	aarch_decoder_table[28]=aarch64_mask_entry(0x0, branchMap(),216);
	aarch_decoder_table[29]=aarch64_mask_entry(0x0, branchMap(),217);
	aarch_decoder_table[13]=aarch64_mask_entry(0x40000000, map_list_of(0,30)(1,31),-1);
	aarch_decoder_table[30]=aarch64_mask_entry(0x0, branchMap(),190);
	aarch_decoder_table[31]=aarch64_mask_entry(0x0, branchMap(),191);
	aarch_decoder_table[14]=aarch64_mask_entry(0x40000000, map_list_of(0,32)(1,33),-1);
	aarch_decoder_table[32]=aarch64_mask_entry(0x0, branchMap(),127);
	aarch_decoder_table[33]=aarch64_mask_entry(0x0, branchMap(),128);
	aarch_decoder_table[15]=aarch64_mask_entry(0x40000000, map_list_of(0,34)(1,35),-1);
	aarch_decoder_table[34]=aarch64_mask_entry(0x0, branchMap(),78);
	aarch_decoder_table[35]=aarch64_mask_entry(0x0, branchMap(),79);
	aarch_decoder_table[16]=aarch64_mask_entry(0x40000000, map_list_of(0,36)(1,37),-1);
	aarch_decoder_table[36]=aarch64_mask_entry(0x0, branchMap(),186);
	aarch_decoder_table[37]=aarch64_mask_entry(0x0, branchMap(),187);
	aarch_decoder_table[17]=aarch64_mask_entry(0x40000000, map_list_of(0,38)(1,39),-1);
	aarch_decoder_table[38]=aarch64_mask_entry(0x0, branchMap(),74);
	aarch_decoder_table[39]=aarch64_mask_entry(0x0, branchMap(),75);
	aarch_decoder_table[18]=aarch64_mask_entry(0x0, branchMap(),215);
	aarch_decoder_table[19]=aarch64_mask_entry(0x0, branchMap(),189);
	aarch_decoder_table[20]=aarch64_mask_entry(0x0, branchMap(),214);
	aarch_decoder_table[21]=aarch64_mask_entry(0x0, branchMap(),188);
	aarch_decoder_table[22]=aarch64_mask_entry(0x0, branchMap(),126);
	aarch_decoder_table[23]=aarch64_mask_entry(0x0, branchMap(),77);
	aarch_decoder_table[24]=aarch64_mask_entry(0x0, branchMap(),125);
	aarch_decoder_table[25]=aarch64_mask_entry(0x0, branchMap(),76);
	aarch_decoder_table[26]=aarch64_mask_entry(0x0, branchMap(),185);
	aarch_decoder_table[27]=aarch64_mask_entry(0x0, branchMap(),73);
	aarch_decoder_table[6]=aarch64_mask_entry(0x40200000, map_list_of(0,40)(1,41)(2,42)(3,43),-1);
	aarch_decoder_table[40]=aarch64_mask_entry(0x0, branchMap(),12);
	aarch_decoder_table[41]=aarch64_mask_entry(0x0, branchMap(),24);
	aarch_decoder_table[42]=aarch64_mask_entry(0x0, branchMap(),65);
	aarch_decoder_table[43]=aarch64_mask_entry(0x0, branchMap(),63);
	aarch_decoder_table[7]=aarch64_mask_entry(0x40200000, map_list_of(0,44)(1,45)(2,46)(3,47),-1);
	aarch_decoder_table[44]=aarch64_mask_entry(0x0, branchMap(),5);
	aarch_decoder_table[45]=aarch64_mask_entry(0x0, branchMap(),3);
	aarch_decoder_table[46]=aarch64_mask_entry(0x3e0, map_list_of(0,48)(31,49),-1);
	aarch_decoder_table[48]=aarch64_mask_entry(0x0, branchMap(),220);
	aarch_decoder_table[49]=aarch64_mask_entry(0x0, branchMap(),151);
	aarch_decoder_table[47]=aarch64_mask_entry(0x0, branchMap(),218);
	aarch_decoder_table[8]=aarch64_mask_entry(0x40c00000, map_list_of(0,50)(1,51)(2,52)(3,53)(7,54),-1);
	aarch_decoder_table[50]=aarch64_mask_entry(0x0, branchMap(),192);
	aarch_decoder_table[51]=aarch64_mask_entry(0x0, branchMap(),80);
	aarch_decoder_table[52]=aarch64_mask_entry(0x0, branchMap(),193);
	aarch_decoder_table[53]=aarch64_mask_entry(0x0, branchMap(),81);
	aarch_decoder_table[54]=aarch64_mask_entry(0x0, branchMap(),84);
	aarch_decoder_table[9]=aarch64_mask_entry(0x40c00000, map_list_of(0,55)(1,56)(2,57)(3,58)(5,59)(7,60),-1);
	aarch_decoder_table[55]=aarch64_mask_entry(0x0, branchMap(),195);
	aarch_decoder_table[56]=aarch64_mask_entry(0x0, branchMap(),83);
	aarch_decoder_table[57]=aarch64_mask_entry(0x0, branchMap(),194);
	aarch_decoder_table[58]=aarch64_mask_entry(0x0, branchMap(),82);
	aarch_decoder_table[59]=aarch64_mask_entry(0x0, branchMap(),86);
	aarch_decoder_table[60]=aarch64_mask_entry(0x0, branchMap(),85);
	aarch_decoder_table[10]=aarch64_mask_entry(0x40200000, map_list_of(0,61)(1,62)(2,63)(3,64),-1);
	aarch_decoder_table[61]=aarch64_mask_entry(0x3e0, map_list_of(0,65)(31,66),-1);
	aarch_decoder_table[65]=aarch64_mask_entry(0x0, branchMap(),158);
	aarch_decoder_table[66]=aarch64_mask_entry(0x0, branchMap(),141);
	aarch_decoder_table[62]=aarch64_mask_entry(0x3e0, map_list_of(0,67)(31,68),-1);
	aarch_decoder_table[67]=aarch64_mask_entry(0x0, branchMap(),156);
	aarch_decoder_table[68]=aarch64_mask_entry(0x0, branchMap(),150);
	aarch_decoder_table[63]=aarch64_mask_entry(0x1f, map_list_of(0,69)(31,70),-1);
	aarch_decoder_table[69]=aarch64_mask_entry(0x0, branchMap(),14);
	aarch_decoder_table[70]=aarch64_mask_entry(0x0, branchMap(),234);
	aarch_decoder_table[64]=aarch64_mask_entry(0x0, branchMap(),25);
	aarch_decoder_table[11]=aarch64_mask_entry(0x40200000, map_list_of(0,71)(1,72)(2,73)(3,74),-1);
	aarch_decoder_table[71]=aarch64_mask_entry(0x1f, map_list_of(0,75)(31,76),-1);
	aarch_decoder_table[75]=aarch64_mask_entry(0x0, branchMap(),8);
	aarch_decoder_table[76]=aarch64_mask_entry(0x0, branchMap(),43);
	aarch_decoder_table[72]=aarch64_mask_entry(0xc00000, map_list_of(0,77),-1);
	aarch_decoder_table[77]=aarch64_mask_entry(0x1f, map_list_of(0,78)(31,79),-1);
	aarch_decoder_table[78]=aarch64_mask_entry(0x0, branchMap(),6);
	aarch_decoder_table[79]=aarch64_mask_entry(0x0, branchMap(),41);
	aarch_decoder_table[73]=aarch64_mask_entry(0x3ff, map_list_of(0,80)(31,81)(992,82),-1);
	aarch_decoder_table[80]=aarch64_mask_entry(0x0, branchMap(),223);
	aarch_decoder_table[81]=aarch64_mask_entry(0x0, branchMap(),46);
	aarch_decoder_table[82]=aarch64_mask_entry(0x0, branchMap(),152);
	aarch_decoder_table[74]=aarch64_mask_entry(0xc00000, map_list_of(0,83),-1);
	aarch_decoder_table[83]=aarch64_mask_entry(0x1f, map_list_of(0,84)(31,85),-1);
	aarch_decoder_table[84]=aarch64_mask_entry(0x0, branchMap(),221);
	aarch_decoder_table[85]=aarch64_mask_entry(0x0, branchMap(),44);
	aarch_decoder_table[3]=aarch64_mask_entry(0x4000000, map_list_of(0,86)(1,87),-1);
	aarch_decoder_table[86]=aarch64_mask_entry(0x3000000, map_list_of(0,88)(1,89)(2,90)(3,91),-1);
	aarch_decoder_table[88]=aarch64_mask_entry(0x80000000, map_list_of(0,92)(1,93),-1);
	aarch_decoder_table[92]=aarch64_mask_entry(0x0, branchMap(),9);
	aarch_decoder_table[93]=aarch64_mask_entry(0x0, branchMap(),10);
	aarch_decoder_table[89]=aarch64_mask_entry(0x60000000, map_list_of(0,94)(1,95)(2,96)(3,97),-1);
	aarch_decoder_table[94]=aarch64_mask_entry(0x0, branchMap(),4);
	aarch_decoder_table[95]=aarch64_mask_entry(0x1f, map_list_of(0,98)(31,99),-1);
	aarch_decoder_table[98]=aarch64_mask_entry(0x0, branchMap(),7);
	aarch_decoder_table[99]=aarch64_mask_entry(0x0, branchMap(),42);
	aarch_decoder_table[96]=aarch64_mask_entry(0x0, branchMap(),219);
	aarch_decoder_table[97]=aarch64_mask_entry(0x1f, map_list_of(0,100)(31,101),-1);
	aarch_decoder_table[100]=aarch64_mask_entry(0x0, branchMap(),222);
	aarch_decoder_table[101]=aarch64_mask_entry(0x0, branchMap(),45);
	aarch_decoder_table[90]=aarch64_mask_entry(0x60800000, map_list_of(0,102)(1,103)(2,104)(4,105)(5,106)(6,107)(7,108),-1);
	aarch_decoder_table[102]=aarch64_mask_entry(0x0, branchMap(),11);
	aarch_decoder_table[103]=aarch64_mask_entry(0x0, branchMap(),138);
	aarch_decoder_table[104]=aarch64_mask_entry(0x3e0, map_list_of(0,109)(31,110),-1);
	aarch_decoder_table[109]=aarch64_mask_entry(0x0, branchMap(),157);
	aarch_decoder_table[110]=aarch64_mask_entry(0x0, branchMap(),140);
	aarch_decoder_table[105]=aarch64_mask_entry(0x0, branchMap(),64);
	aarch_decoder_table[106]=aarch64_mask_entry(0x0, branchMap(),139);
	aarch_decoder_table[107]=aarch64_mask_entry(0x1f, map_list_of(0,111)(31,112),-1);
	aarch_decoder_table[111]=aarch64_mask_entry(0x0, branchMap(),13);
	aarch_decoder_table[112]=aarch64_mask_entry(0x0, branchMap(),233);
	aarch_decoder_table[108]=aarch64_mask_entry(0x0, branchMap(),142);
	aarch_decoder_table[91]=aarch64_mask_entry(0x60800000, map_list_of(0,113)(1,114)(2,115)(4,116),-1);
	aarch_decoder_table[113]=aarch64_mask_entry(0x80402000, map_list_of(0,117)(1,118)(7,119),-1);
	aarch_decoder_table[117]=aarch64_mask_entry(0x1c00, map_list_of(0,120)(7,121),-1);
	aarch_decoder_table[120]=aarch64_mask_entry(0x0, branchMap(),173);
	aarch_decoder_table[121]=aarch64_mask_entry(0x0, branchMap(),225);
	aarch_decoder_table[118]=aarch64_mask_entry(0x5c00, map_list_of(7,122)(15,123),-1);
	aarch_decoder_table[122]=aarch64_mask_entry(0x0, branchMap(),226);
	aarch_decoder_table[123]=aarch64_mask_entry(0x0, branchMap(),16);
	aarch_decoder_table[119]=aarch64_mask_entry(0x0, branchMap(),227);
	aarch_decoder_table[114]=aarch64_mask_entry(0x200000, map_list_of(0,124),-1);
	aarch_decoder_table[124]=aarch64_mask_entry(0x0, branchMap(),67);
	aarch_decoder_table[115]=aarch64_mask_entry(0x0, branchMap(),21);
	aarch_decoder_table[116]=aarch64_mask_entry(0x5c00, map_list_of(0,125)(7,126)(15,127),-1);
	aarch_decoder_table[125]=aarch64_mask_entry(0x0, branchMap(),130);
	aarch_decoder_table[126]=aarch64_mask_entry(0x807fa000, map_list_of(0,128)(1,129),-1);
	aarch_decoder_table[128]=aarch64_mask_entry(0x0, branchMap(),244);
	aarch_decoder_table[129]=aarch64_mask_entry(0x0, branchMap(),245);
	aarch_decoder_table[127]=aarch64_mask_entry(0x0, branchMap(),133);
	aarch_decoder_table[87]=aarch64_mask_entry(0x60000000, map_list_of(0,130)(1,131)(2,132),-1);
	aarch_decoder_table[130]=aarch64_mask_entry(0x80000000, map_list_of(0,133)(1,134),-1);
	aarch_decoder_table[133]=aarch64_mask_entry(0x0, branchMap(),20);
	aarch_decoder_table[134]=aarch64_mask_entry(0x0, branchMap(),26);
	aarch_decoder_table[131]=aarch64_mask_entry(0x3000000, map_list_of(0,135)(1,136)(2,137)(3,138),-1);
	aarch_decoder_table[135]=aarch64_mask_entry(0x0, branchMap(),31);
	aarch_decoder_table[136]=aarch64_mask_entry(0x0, branchMap(),30);
	aarch_decoder_table[137]=aarch64_mask_entry(0x0, branchMap(),231);
	aarch_decoder_table[138]=aarch64_mask_entry(0x0, branchMap(),230);
	aarch_decoder_table[132]=aarch64_mask_entry(0x83000000, map_list_of(0,139)(4,140)(5,141)(6,142),-1);
	aarch_decoder_table[139]=aarch64_mask_entry(0x0, branchMap(),19);
	aarch_decoder_table[140]=aarch64_mask_entry(0xe0001f, map_list_of(1,143)(2,144)(3,145)(32,146)(64,147)(161,148)(162,149)(163,150),-1);
	aarch_decoder_table[143]=aarch64_mask_entry(0x0, branchMap(),224);
	aarch_decoder_table[144]=aarch64_mask_entry(0x0, branchMap(),70);
	aarch_decoder_table[145]=aarch64_mask_entry(0x0, branchMap(),180);
	aarch_decoder_table[146]=aarch64_mask_entry(0x0, branchMap(),29);
	aarch_decoder_table[147]=aarch64_mask_entry(0x0, branchMap(),69);
	aarch_decoder_table[148]=aarch64_mask_entry(0x0, branchMap(),57);
	aarch_decoder_table[149]=aarch64_mask_entry(0x0, branchMap(),58);
	aarch_decoder_table[150]=aarch64_mask_entry(0x0, branchMap(),59);
	aarch_decoder_table[141]=aarch64_mask_entry(0xf00000, map_list_of(0,151)(1,152)(2,153)(3,154),-1);
	aarch_decoder_table[151]=aarch64_mask_entry(0x80000, map_list_of(0,155)(1,156),-1);
	aarch_decoder_table[155]=aarch64_mask_entry(0xf01f, map_list_of(95,157)(127,158)(159,159),-1);
	aarch_decoder_table[157]=aarch64_mask_entry(0x70000, map_list_of(3,160),-1);
	aarch_decoder_table[160]=aarch64_mask_entry(0x20, map_list_of(0,161)(1,162),-1);
	aarch_decoder_table[161]=aarch64_mask_entry(0xc0, map_list_of(0,163)(1,164)(2,165),-1);
	aarch_decoder_table[163]=aarch64_mask_entry(0x0, branchMap(),68);
	aarch_decoder_table[164]=aarch64_mask_entry(0x0, branchMap(),246);
	aarch_decoder_table[165]=aarch64_mask_entry(0x0, branchMap(),177);
	aarch_decoder_table[162]=aarch64_mask_entry(0xfc0, map_list_of(0,166)(1,167)(2,168),-1);
	aarch_decoder_table[166]=aarch64_mask_entry(0x0, branchMap(),248);
	aarch_decoder_table[167]=aarch64_mask_entry(0x0, branchMap(),247);
	aarch_decoder_table[168]=aarch64_mask_entry(0x0, branchMap(),178);
	aarch_decoder_table[158]=aarch64_mask_entry(0x700e0, map_list_of(26,169)(28,170)(29,171)(30,172),-1);
	aarch_decoder_table[169]=aarch64_mask_entry(0x0, branchMap(),38);
	aarch_decoder_table[170]=aarch64_mask_entry(0x0, branchMap(),62);
	aarch_decoder_table[171]=aarch64_mask_entry(0x0, branchMap(),60);
	aarch_decoder_table[172]=aarch64_mask_entry(0x0, branchMap(),72);
	aarch_decoder_table[159]=aarch64_mask_entry(0x0, branchMap(),146);
	aarch_decoder_table[156]=aarch64_mask_entry(0xf800, map_list_of(0,173)(14,174)(15,175)(16,176),-1);
	aarch_decoder_table[173]=aarch64_mask_entry(0x0, branchMap(),228);
	aarch_decoder_table[174]=aarch64_mask_entry(0x0, branchMap(),56);
	aarch_decoder_table[175]=aarch64_mask_entry(0x0, branchMap(),18);
	aarch_decoder_table[176]=aarch64_mask_entry(0x0, branchMap(),232);
	aarch_decoder_table[152]=aarch64_mask_entry(0x0, branchMap(),147);
	aarch_decoder_table[153]=aarch64_mask_entry(0x0, branchMap(),229);
	aarch_decoder_table[154]=aarch64_mask_entry(0x0, branchMap(),145);
	aarch_decoder_table[142]=aarch64_mask_entry(0xfffc1f, map_list_of(63488,177)(129024,178)(194560,179)(325632,180)(391168,181),-1);
	aarch_decoder_table[177]=aarch64_mask_entry(0x0, branchMap(),28);
	aarch_decoder_table[178]=aarch64_mask_entry(0x0, branchMap(),27);
	aarch_decoder_table[179]=aarch64_mask_entry(0x0, branchMap(),164);
	aarch_decoder_table[180]=aarch64_mask_entry(0x0, branchMap(),66);
	aarch_decoder_table[181]=aarch64_mask_entry(0x0, branchMap(),61);
	aarch_decoder_table[4]=aarch64_mask_entry(0x27000000, map_list_of(0,182)(2,183)(3,184)(8,185)(9,186)(10,187),-1);
	aarch_decoder_table[182]=aarch64_mask_entry(0x80000000, map_list_of(0,188)(1,189),-1);
	aarch_decoder_table[188]=aarch64_mask_entry(0x0, branchMap(),90);
	aarch_decoder_table[189]=aarch64_mask_entry(0x40000000, map_list_of(0,190)(1,191),-1);
	aarch_decoder_table[190]=aarch64_mask_entry(0x0, branchMap(),111);
	aarch_decoder_table[191]=aarch64_mask_entry(0x0, branchMap(),160);
	aarch_decoder_table[183]=aarch64_mask_entry(0x40e00000, map_list_of(0,192)(4,193)(6,194)(8,195)(12,196)(14,197),-1);
	aarch_decoder_table[192]=aarch64_mask_entry(0x0, branchMap(),1);
	aarch_decoder_table[193]=aarch64_mask_entry(0xc00, map_list_of(0,198)(1,199),-1);
	aarch_decoder_table[198]=aarch64_mask_entry(0x0, branchMap(),50);
	aarch_decoder_table[199]=aarch64_mask_entry(0x1f03e0, map_list_of(0,200)(1023,201),-1);
	aarch_decoder_table[200]=aarch64_mask_entry(0x0, branchMap(),36);
	aarch_decoder_table[201]=aarch64_mask_entry(0x0, branchMap(),51);
	aarch_decoder_table[194]=aarch64_mask_entry(0xf000, map_list_of(0,202)(2,203)(4,204)(5,205),-1);
	aarch_decoder_table[202]=aarch64_mask_entry(0xc00, map_list_of(2,206)(3,207),-1);
	aarch_decoder_table[206]=aarch64_mask_entry(0x0, branchMap(),238);
	aarch_decoder_table[207]=aarch64_mask_entry(0x0, branchMap(),176);
	aarch_decoder_table[203]=aarch64_mask_entry(0xc00, map_list_of(0,208)(1,209)(2,210)(3,211),-1);
	aarch_decoder_table[208]=aarch64_mask_entry(0x0, branchMap(),129);
	aarch_decoder_table[209]=aarch64_mask_entry(0x0, branchMap(),132);
	aarch_decoder_table[210]=aarch64_mask_entry(0x0, branchMap(),15);
	aarch_decoder_table[211]=aarch64_mask_entry(0x0, branchMap(),169);
	aarch_decoder_table[204]=aarch64_mask_entry(0x0, branchMap(),48);
	aarch_decoder_table[205]=aarch64_mask_entry(0x0, branchMap(),49);
	aarch_decoder_table[195]=aarch64_mask_entry(0xfc00, map_list_of(0,212),-1);
	aarch_decoder_table[212]=aarch64_mask_entry(0x3e0, map_list_of(0,213)(31,214),-1);
	aarch_decoder_table[213]=aarch64_mask_entry(0x0, branchMap(),171);
	aarch_decoder_table[214]=aarch64_mask_entry(0x0, branchMap(),153);
	aarch_decoder_table[196]=aarch64_mask_entry(0xc00, map_list_of(0,215)(1,216),-1);
	aarch_decoder_table[215]=aarch64_mask_entry(0x1f03e0, map_list_of(0,217)(1023,218),-1);
	aarch_decoder_table[217]=aarch64_mask_entry(0x0, branchMap(),37);
	aarch_decoder_table[218]=aarch64_mask_entry(0x0, branchMap(),52);
	aarch_decoder_table[216]=aarch64_mask_entry(0x0, branchMap(),47);
	aarch_decoder_table[197]=aarch64_mask_entry(0x1ff800, map_list_of(0,219)(1,220)(2,221),-1);
	aarch_decoder_table[219]=aarch64_mask_entry(0x400, map_list_of(0,222)(1,223),-1);
	aarch_decoder_table[222]=aarch64_mask_entry(0x0, branchMap(),163);
	aarch_decoder_table[223]=aarch64_mask_entry(0x0, branchMap(),166);
	aarch_decoder_table[220]=aarch64_mask_entry(0x80000000, map_list_of(0,224)(1,225),-1);
	aarch_decoder_table[224]=aarch64_mask_entry(0x0, branchMap(),165);
	aarch_decoder_table[225]=aarch64_mask_entry(0x0, branchMap(),167);
	aarch_decoder_table[221]=aarch64_mask_entry(0x400, map_list_of(0,226)(1,227),-1);
	aarch_decoder_table[226]=aarch64_mask_entry(0x0, branchMap(),40);
	aarch_decoder_table[227]=aarch64_mask_entry(0x0, branchMap(),39);
	aarch_decoder_table[184]=aarch64_mask_entry(0x40e08000, map_list_of(0,228)(1,229)(2,230)(3,231)(4,232)(10,233)(11,234)(12,235),-1);
	aarch_decoder_table[228]=aarch64_mask_entry(0x7c00, map_list_of(0,236)(31,237),-1);
	aarch_decoder_table[236]=aarch64_mask_entry(0x0, branchMap(),135);
	aarch_decoder_table[237]=aarch64_mask_entry(0x0, branchMap(),149);
	aarch_decoder_table[229]=aarch64_mask_entry(0x7c00, map_list_of(0,238)(31,239),-1);
	aarch_decoder_table[238]=aarch64_mask_entry(0x0, branchMap(),148);
	aarch_decoder_table[239]=aarch64_mask_entry(0x0, branchMap(),136);
	aarch_decoder_table[230]=aarch64_mask_entry(0x80000000, map_list_of(1,240),-1);
	aarch_decoder_table[240]=aarch64_mask_entry(0x7c00, map_list_of(0,241)(31,242),-1);
	aarch_decoder_table[241]=aarch64_mask_entry(0x0, branchMap(),179);
	aarch_decoder_table[242]=aarch64_mask_entry(0x0, branchMap(),184);
	aarch_decoder_table[231]=aarch64_mask_entry(0x80000000, map_list_of(1,243),-1);
	aarch_decoder_table[243]=aarch64_mask_entry(0x7c00, map_list_of(0,244)(31,245),-1);
	aarch_decoder_table[244]=aarch64_mask_entry(0x0, branchMap(),182);
	aarch_decoder_table[245]=aarch64_mask_entry(0x0, branchMap(),181);
	aarch_decoder_table[232]=aarch64_mask_entry(0x0, branchMap(),183);
	aarch_decoder_table[233]=aarch64_mask_entry(0x80000000, map_list_of(1,246),-1);
	aarch_decoder_table[246]=aarch64_mask_entry(0x7c00, map_list_of(0,247)(31,248),-1);
	aarch_decoder_table[247]=aarch64_mask_entry(0x0, branchMap(),239);
	aarch_decoder_table[248]=aarch64_mask_entry(0x0, branchMap(),243);
	aarch_decoder_table[234]=aarch64_mask_entry(0x80000000, map_list_of(1,249),-1);
	aarch_decoder_table[249]=aarch64_mask_entry(0x7c00, map_list_of(0,250)(31,251),-1);
	aarch_decoder_table[250]=aarch64_mask_entry(0x0, branchMap(),241);
	aarch_decoder_table[251]=aarch64_mask_entry(0x0, branchMap(),240);
	aarch_decoder_table[235]=aarch64_mask_entry(0x0, branchMap(),242);
	aarch_decoder_table[185]=aarch64_mask_entry(0x80a00c00, map_list_of(0,252)(1,253)(2,254)(3,255)(6,256)(8,257)(9,258)(10,259)(11,260)(14,261)(16,262)(17,263)(18,264)(19,265)(22,266)(24,267)(25,268)(26,269)(27,270)(30,271),-1);
	aarch_decoder_table[252]=aarch64_mask_entry(0x40400000, map_list_of(0,272)(1,273)(2,274)(3,275),-1);
	aarch_decoder_table[272]=aarch64_mask_entry(0x0, branchMap(),212);
	aarch_decoder_table[273]=aarch64_mask_entry(0x0, branchMap(),120);
	aarch_decoder_table[274]=aarch64_mask_entry(0x0, branchMap(),213);
	aarch_decoder_table[275]=aarch64_mask_entry(0x0, branchMap(),121);
	aarch_decoder_table[253]=aarch64_mask_entry(0x40400000, map_list_of(0,276)(1,277)(2,278)(3,279),-1);
	aarch_decoder_table[276]=aarch64_mask_entry(0x0, branchMap(),200);
	aarch_decoder_table[277]=aarch64_mask_entry(0x0, branchMap(),92);
	aarch_decoder_table[278]=aarch64_mask_entry(0x0, branchMap(),204);
	aarch_decoder_table[279]=aarch64_mask_entry(0x0, branchMap(),96);
	aarch_decoder_table[254]=aarch64_mask_entry(0x40400000, map_list_of(0,280)(1,281)(2,282)(3,283),-1);
	aarch_decoder_table[280]=aarch64_mask_entry(0x0, branchMap(),209);
	aarch_decoder_table[281]=aarch64_mask_entry(0x0, branchMap(),114);
	aarch_decoder_table[282]=aarch64_mask_entry(0x0, branchMap(),210);
	aarch_decoder_table[283]=aarch64_mask_entry(0x0, branchMap(),115);
	aarch_decoder_table[255]=aarch64_mask_entry(0x40400000, map_list_of(0,284)(1,285)(2,286)(3,287),-1);
	aarch_decoder_table[284]=aarch64_mask_entry(0x0, branchMap(),201);
	aarch_decoder_table[285]=aarch64_mask_entry(0x0, branchMap(),93);
	aarch_decoder_table[286]=aarch64_mask_entry(0x0, branchMap(),205);
	aarch_decoder_table[287]=aarch64_mask_entry(0x0, branchMap(),97);
	aarch_decoder_table[256]=aarch64_mask_entry(0x40400000, map_list_of(0,288)(1,289)(2,290)(3,291),-1);
	aarch_decoder_table[288]=aarch64_mask_entry(0x0, branchMap(),203);
	aarch_decoder_table[289]=aarch64_mask_entry(0x0, branchMap(),95);
	aarch_decoder_table[290]=aarch64_mask_entry(0x0, branchMap(),207);
	aarch_decoder_table[291]=aarch64_mask_entry(0x0, branchMap(),99);
	aarch_decoder_table[257]=aarch64_mask_entry(0x40000000, map_list_of(0,292)(1,293),-1);
	aarch_decoder_table[292]=aarch64_mask_entry(0x0, branchMap(),122);
	aarch_decoder_table[293]=aarch64_mask_entry(0x0, branchMap(),123);
	aarch_decoder_table[258]=aarch64_mask_entry(0x40000000, map_list_of(0,294)(1,295),-1);
	aarch_decoder_table[294]=aarch64_mask_entry(0x0, branchMap(),100);
	aarch_decoder_table[295]=aarch64_mask_entry(0x0, branchMap(),104);
	aarch_decoder_table[259]=aarch64_mask_entry(0x40000000, map_list_of(0,296)(1,297),-1);
	aarch_decoder_table[296]=aarch64_mask_entry(0x0, branchMap(),116);
	aarch_decoder_table[297]=aarch64_mask_entry(0x0, branchMap(),117);
	aarch_decoder_table[260]=aarch64_mask_entry(0x40000000, map_list_of(0,298)(1,299),-1);
	aarch_decoder_table[298]=aarch64_mask_entry(0x0, branchMap(),101);
	aarch_decoder_table[299]=aarch64_mask_entry(0x0, branchMap(),105);
	aarch_decoder_table[261]=aarch64_mask_entry(0x40000000, map_list_of(0,300)(1,301),-1);
	aarch_decoder_table[300]=aarch64_mask_entry(0x0, branchMap(),103);
	aarch_decoder_table[301]=aarch64_mask_entry(0x0, branchMap(),107);
	aarch_decoder_table[262]=aarch64_mask_entry(0x400000, map_list_of(0,302)(1,303),-1);
	aarch_decoder_table[302]=aarch64_mask_entry(0x0, branchMap(),211);
	aarch_decoder_table[303]=aarch64_mask_entry(0x0, branchMap(),119);
	aarch_decoder_table[263]=aarch64_mask_entry(0x400000, map_list_of(0,304)(1,305),-1);
	aarch_decoder_table[304]=aarch64_mask_entry(0x0, branchMap(),196);
	aarch_decoder_table[305]=aarch64_mask_entry(0x0, branchMap(),87);
	aarch_decoder_table[264]=aarch64_mask_entry(0x400000, map_list_of(0,306)(1,307),-1);
	aarch_decoder_table[306]=aarch64_mask_entry(0x0, branchMap(),208);
	aarch_decoder_table[307]=aarch64_mask_entry(0x0, branchMap(),113);
	aarch_decoder_table[265]=aarch64_mask_entry(0x400000, map_list_of(0,308)(1,309),-1);
	aarch_decoder_table[308]=aarch64_mask_entry(0x0, branchMap(),197);
	aarch_decoder_table[309]=aarch64_mask_entry(0x0, branchMap(),88);
	aarch_decoder_table[266]=aarch64_mask_entry(0x400000, map_list_of(0,310)(1,311),-1);
	aarch_decoder_table[310]=aarch64_mask_entry(0x0, branchMap(),199);
	aarch_decoder_table[311]=aarch64_mask_entry(0x0, branchMap(),91);
	aarch_decoder_table[267]=aarch64_mask_entry(0x40400000, map_list_of(0,312)(2,313),-1);
	aarch_decoder_table[312]=aarch64_mask_entry(0x0, branchMap(),124);
	aarch_decoder_table[313]=aarch64_mask_entry(0x0, branchMap(),162);
	aarch_decoder_table[268]=aarch64_mask_entry(0x0, branchMap(),108);
	aarch_decoder_table[269]=aarch64_mask_entry(0x0, branchMap(),118);
	aarch_decoder_table[270]=aarch64_mask_entry(0x0, branchMap(),109);
	aarch_decoder_table[271]=aarch64_mask_entry(0x40400000, map_list_of(0,314)(2,315),-1);
	aarch_decoder_table[314]=aarch64_mask_entry(0x0, branchMap(),112);
	aarch_decoder_table[315]=aarch64_mask_entry(0x0, branchMap(),161);
	aarch_decoder_table[186]=aarch64_mask_entry(0x80800000, map_list_of(0,316)(1,317)(2,318)(3,319),-1);
	aarch_decoder_table[316]=aarch64_mask_entry(0x40600c00, map_list_of(3,320)(11,321)(19,322)(27,323),-1);
	aarch_decoder_table[320]=aarch64_mask_entry(0x0, branchMap(),202);
	aarch_decoder_table[321]=aarch64_mask_entry(0x0, branchMap(),94);
	aarch_decoder_table[322]=aarch64_mask_entry(0x0, branchMap(),206);
	aarch_decoder_table[323]=aarch64_mask_entry(0x0, branchMap(),98);
	aarch_decoder_table[317]=aarch64_mask_entry(0x40200c00, map_list_of(3,324)(11,325),-1);
	aarch_decoder_table[324]=aarch64_mask_entry(0x0, branchMap(),102);
	aarch_decoder_table[325]=aarch64_mask_entry(0x0, branchMap(),106);
	aarch_decoder_table[318]=aarch64_mask_entry(0x600c00, map_list_of(3,326)(11,327),-1);
	aarch_decoder_table[326]=aarch64_mask_entry(0x0, branchMap(),198);
	aarch_decoder_table[327]=aarch64_mask_entry(0x0, branchMap(),89);
	aarch_decoder_table[319]=aarch64_mask_entry(0x40400000, map_list_of(0,328)(2,329),-1);
	aarch_decoder_table[328]=aarch64_mask_entry(0x0, branchMap(),110);
	aarch_decoder_table[329]=aarch64_mask_entry(0x0, branchMap(),159);
	aarch_decoder_table[187]=aarch64_mask_entry(0x40e00c00, map_list_of(0,330)(8,331)(10,332)(32,333)(40,334)(42,335),-1);
	aarch_decoder_table[330]=aarch64_mask_entry(0x0, branchMap(),2);
	aarch_decoder_table[331]=aarch64_mask_entry(0x0, branchMap(),33);
	aarch_decoder_table[332]=aarch64_mask_entry(0x0, branchMap(),32);
	aarch_decoder_table[333]=aarch64_mask_entry(0xf000, map_list_of(0,336),-1);
	aarch_decoder_table[336]=aarch64_mask_entry(0x3e0, map_list_of(0,337)(31,338),-1);
	aarch_decoder_table[337]=aarch64_mask_entry(0x0, branchMap(),172);
	aarch_decoder_table[338]=aarch64_mask_entry(0x0, branchMap(),154);
	aarch_decoder_table[334]=aarch64_mask_entry(0x0, branchMap(),35);
	aarch_decoder_table[335]=aarch64_mask_entry(0x0, branchMap(),34);
num of vaild leaves 249
processed indexex:  Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248]) 249
missing indexes: [] 0
number of total nodes in the tree: 339
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('imm3', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('imm12', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('imm3', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('imm12', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('immlo', [(30, 1)])
<type 'dict'>
('immhi', [(23, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('immlo', [(30, 1)])
<type 'dict'>
('immhi', [(23, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm19', [(23, 1)])
<type 'dict'>
('cond', [(3, 1)])
<type 'dict'>
('imm26', [(25, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('imm26', [(25, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('imm19', [(23, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('imm19', [(23, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('imm5', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('nzcv', [(3, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('nzcv', [(3, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('imm5', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('nzcv', [(3, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('nzcv', [(3, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('imm3', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('imm12', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('imm3', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('imm12', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('sz', [(11, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('sz', [(11, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('cond', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sz', [(30, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm7', [(21, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm7', [(21, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm7', [(21, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm19', [(23, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm19', [(23, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sz', [(30, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Ra', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('hw', [(22, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('hw', [(22, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('hw', [(22, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('hw', [(22, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('hw', [(22, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('o0', [(19, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRn', [(15, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('o0', [(19, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRn', [(15, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Ra', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('imm12', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm19', [(23, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Ra', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Ra', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sz', [(30, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm7', [(21, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm7', [(21, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('S', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('imm9', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sz', [(30, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rt2', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('Rs', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('imm3', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('imm12', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('option', [(15, 1)])
<type 'dict'>
('imm3', [(12, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('imm12', [(21, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('imm16', [(20, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRn', [(15, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRn', [(15, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('b5', [(31, 1)])
<type 'dict'>
('b40', [(23, 1)])
<type 'dict'>
('imm14', [(18, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('b5', [(31, 1)])
<type 'dict'>
('b40', [(23, 1)])
<type 'dict'>
('imm14', [(18, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('op1', [(18, 1)])
<type 'dict'>
('CRm', [(11, 1)])
<type 'dict'>
('op2', [(7, 1)])
<type 'dict'>
('Rt', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('shift', [(23, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('imm6', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('N', [(22, 1)])
<type 'dict'>
('immr', [(21, 1)])
<type 'dict'>
('imms', [(15, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('sf', [(31, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Ra', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Ra', [(14, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rm', [(20, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
<type 'dict'>
('Rn', [(9, 1)])
<type 'dict'>
('Rd', [(4, 1)])
operands: {}
