enum {
  aarch64_op_INVALID,
  aarch64_op_extended,
  aarch64_op_adc,
  aarch64_op_adcs,
  aarch64_op_add_addsub_ext,
  aarch64_op_add_addsub_imm,
  aarch64_op_add_addsub_shift,
  aarch64_op_adds_addsub_ext,
  aarch64_op_adds_addsub_imm,
  aarch64_op_adds_addsub_shift,
  aarch64_op_adr,
  aarch64_op_adrp,
  aarch64_op_and_log_imm,
  aarch64_op_and_log_shift,
  aarch64_op_ands_log_imm,
  aarch64_op_ands_log_shift,
  aarch64_op_asr_asrv,
  aarch64_op_asr_sbfm,
  aarch64_op_asrv,
  aarch64_op_at_sys,
  aarch64_op_b_cond,
  aarch64_op_b_uncond,
  aarch64_op_bfi_bfm,
  aarch64_op_bfm,
  aarch64_op_bfxil_bfm,
  aarch64_op_bic_log_shift,
  aarch64_op_bics,
  aarch64_op_bl,
  aarch64_op_blr,
  aarch64_op_br,
  aarch64_op_brk,
  aarch64_op_cbnz,
  aarch64_op_cbz,
  aarch64_op_ccmn_imm,
  aarch64_op_ccmn_reg,
  aarch64_op_ccmp_imm,
  aarch64_op_ccmp_reg,
  aarch64_op_cinc_csinc,
  aarch64_op_cinv_csinv,
  aarch64_op_clrex,
  aarch64_op_cls_int,
  aarch64_op_clz_int,
  aarch64_op_cmn_adds_addsub_ext,
  aarch64_op_cmn_adds_addsub_imm,
  aarch64_op_cmn_adds_addsub_shift,
  aarch64_op_cmp_subs_addsub_ext,
  aarch64_op_cmp_subs_addsub_imm,
  aarch64_op_cmp_subs_addsub_shift,
  aarch64_op_cneg_csneg,
  aarch64_op_crc32,
  aarch64_op_crc32c,
  aarch64_op_csel,
  aarch64_op_cset_csinc,
  aarch64_op_csetm_csinv,
  aarch64_op_csinc,
  aarch64_op_csinv,
  aarch64_op_csneg,
  aarch64_op_dc_sys,
  aarch64_op_dcps1,
  aarch64_op_dcps2,
  aarch64_op_dcps3,
  aarch64_op_dmb,
  aarch64_op_drps,
  aarch64_op_dsb,
  aarch64_op_eon,
  aarch64_op_eor_log_imm,
  aarch64_op_eor_log_shift,
  aarch64_op_eret,
  aarch64_op_extr,
  aarch64_op_hint,
  aarch64_op_hlt,
  aarch64_op_hvc,
  aarch64_op_ic_sys,
  aarch64_op_isb,
  aarch64_op_ldar,
  aarch64_op_ldarb,
  aarch64_op_ldarh,
  aarch64_op_ldaxp,
  aarch64_op_ldaxr,
  aarch64_op_ldaxrb,
  aarch64_op_ldaxrh,
  aarch64_op_ldnp_gen,
  aarch64_op_ldp_gen,
  aarch64_op_ldpsw,
  aarch64_op_ldr_imm_gen,
  aarch64_op_ldr_lit_gen,
  aarch64_op_ldr_reg_gen,
  aarch64_op_ldrb_imm,
  aarch64_op_ldrb_reg,
  aarch64_op_ldrh_imm,
  aarch64_op_ldrh_reg,
  aarch64_op_ldrsb_imm,
  aarch64_op_ldrsb_reg,
  aarch64_op_ldrsh_imm,
  aarch64_op_ldrsh_reg,
  aarch64_op_ldrsw_imm,
  aarch64_op_ldrsw_lit,
  aarch64_op_ldrsw_reg,
  aarch64_op_ldtr,
  aarch64_op_ldtrb,
  aarch64_op_ldtrh,
  aarch64_op_ldtrsb,
  aarch64_op_ldtrsh,
  aarch64_op_ldtrsw,
  aarch64_op_ldur_gen,
  aarch64_op_ldurb,
  aarch64_op_ldurh,
  aarch64_op_ldursb,
  aarch64_op_ldursh,
  aarch64_op_ldursw,
  aarch64_op_ldxp,
  aarch64_op_ldxr,
  aarch64_op_ldxrb,
  aarch64_op_ldxrh,
  aarch64_op_lsl_lslv,
  aarch64_op_lsl_ubfm,
  aarch64_op_lslv,
  aarch64_op_lsr_lsrv,
  aarch64_op_lsr_ubfm,
  aarch64_op_lsrv,
  aarch64_op_madd,
  aarch64_op_mneg_msub,
  aarch64_op_mov_add_addsub_imm,
  aarch64_op_mov_movn,
  aarch64_op_mov_movz,
  aarch64_op_mov_orr_log_imm,
  aarch64_op_mov_orr_log_shift,
  aarch64_op_movk,
  aarch64_op_movn,
  aarch64_op_movz,
  aarch64_op_mrs,
  aarch64_op_msr_imm,
  aarch64_op_msr_reg,
  aarch64_op_msub,
  aarch64_op_mul_madd,
  aarch64_op_mvn_orn_log_shift,
  aarch64_op_neg_sub_addsub_shift,
  aarch64_op_negs_subs_addsub_shift,
  aarch64_op_ngc_sbc,
  aarch64_op_ngcs_sbcs,
  aarch64_op_nop_hint,
  aarch64_op_orn_log_shift,
  aarch64_op_orr_log_imm,
  aarch64_op_orr_log_shift,
  aarch64_op_prfm_imm,
  aarch64_op_prfm_lit,
  aarch64_op_prfm_reg,
  aarch64_op_prfum,
  aarch64_op_rbit_int,
  aarch64_op_ret,
  aarch64_op_rev,
  aarch64_op_rev16_int,
  aarch64_op_rev32_int,
  aarch64_op_ror_extr,
  aarch64_op_ror_rorv,
  aarch64_op_rorv,
  aarch64_op_sbc,
  aarch64_op_sbcs,
  aarch64_op_sbfiz_sbfm,
  aarch64_op_sbfm,
  aarch64_op_sbfx_sbfm,
  aarch64_op_sdiv,
  aarch64_op_sev_hint,
  aarch64_op_sevl_hint,
  aarch64_op_smaddl,
  aarch64_op_smc,
  aarch64_op_smnegl_smsubl,
  aarch64_op_smsubl,
  aarch64_op_smulh,
  aarch64_op_smull_smaddl,
  aarch64_op_stlr,
  aarch64_op_stlrb,
  aarch64_op_stlrh,
  aarch64_op_stlxp,
  aarch64_op_stlxr,
  aarch64_op_stlxrb,
  aarch64_op_stlxrh,
  aarch64_op_stnp_gen,
  aarch64_op_stp_gen,
  aarch64_op_str_imm_gen,
  aarch64_op_str_reg_gen,
  aarch64_op_strb_imm,
  aarch64_op_strb_reg,
  aarch64_op_strh_imm,
  aarch64_op_strh_reg,
  aarch64_op_sttr,
  aarch64_op_sttrb,
  aarch64_op_sttrh,
  aarch64_op_stur_gen,
  aarch64_op_sturb,
  aarch64_op_sturh,
  aarch64_op_stxp,
  aarch64_op_stxr,
  aarch64_op_stxrb,
  aarch64_op_stxrh,
  aarch64_op_sub_addsub_ext,
  aarch64_op_sub_addsub_imm,
  aarch64_op_sub_addsub_shift,
  aarch64_op_subs_addsub_ext,
  aarch64_op_subs_addsub_imm,
  aarch64_op_subs_addsub_shift,
  aarch64_op_svc,
  aarch64_op_sxtb_sbfm,
  aarch64_op_sxth_sbfm,
  aarch64_op_sxtw_sbfm,
  aarch64_op_sys,
  aarch64_op_sysl,
  aarch64_op_tbnz,
  aarch64_op_tbz,
  aarch64_op_tlbi_sys,
  aarch64_op_tst_ands_log_imm,
  aarch64_op_tst_ands_log_shift,
  aarch64_op_ubfiz_ubfm,
  aarch64_op_ubfm,
  aarch64_op_ubfx_ubfm,
  aarch64_op_udiv,
  aarch64_op_umaddl,
  aarch64_op_umnegl_umsubl,
  aarch64_op_umsubl,
  aarch64_op_umulh,
  aarch64_op_umull_umaddl,
  aarch64_op_uxtb_ubfm,
  aarch64_op_uxth_ubfm,
  aarch64_op_wfe_hint,
  aarch64_op_wfi_hint,
  aarch64_op_yield_hint,
}
number of instructions:  224
0            unallocated    0b11000000000000000000000000000 ( 0x18000000 )
1                    adc 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010000000000000000000000000 ( 0x1a000000 )
2                   adcs 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00111010000000000000000000000000 ( 0x3a000000 )
3         add_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	00001011001000000000000000000000 ( 0xb200000 )
4         add_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	00010001000000000000000000000000 ( 0x11000000 )
5       add_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00001011000000000000000000000000 ( 0xb000000 )
6        adds_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	00101011001000000000000000000000 ( 0x2b200000 )
7        adds_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110001000000000000000000000000 ( 0x31000000 )
8      adds_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00101011000000000000000000000000 ( 0x2b000000 )
9                    adr 	10011111000000000000000000000000 ( 0x9f000000 ) 	00010000000000000000000000000000 ( 0x10000000 )
10                   adrp 	10011111000000000000000000000000 ( 0x9f000000 ) 	10010000000000000000000000000000 ( 0x90000000 )
11            and_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010010000000000000000000000000 ( 0x12000000 )
12          and_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00001010000000000000000000000000 ( 0xa000000 )
13           ands_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01110010000000000000000000000000 ( 0x72000000 )
14         ands_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01101010000000000000000000000000 ( 0x6a000000 )
15               asr_asrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010100000000000 ( 0x1ac02800 )
16               asr_sbfm 	01111111100000000111110000000000 ( 0x7f807c00 ) 	00010011000000000111110000000000 ( 0x13007c00 )
17                   asrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010100000000000 ( 0x1ac02800 )
18                 at_sys 	11111111111110001111111100000000 ( 0xfff8ff00 ) 	11010101000010000111100000000000 ( 0xd5087800 )
19                 b_cond 	11111111000000000000000000010000 ( 0xff000010 ) 	01010100000000000000000000000000 ( 0x54000000 )
20               b_uncond 	11111100000000000000000000000000 ( 0xfc000000 ) 	00010100000000000000000000000000 ( 0x14000000 )
21                bfi_bfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110011000000000000000000000000 ( 0x33000000 )
22                    bfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110011000000000000000000000000 ( 0x33000000 )
23              bfxil_bfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110011000000000000000000000000 ( 0x33000000 )
24          bic_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00001010001000000000000000000000 ( 0xa200000 )
25                   bics 	01111111001000000000000000000000 ( 0x7f200000 ) 	01101010001000000000000000000000 ( 0x6a200000 )
26                     bl 	11111100000000000000000000000000 ( 0xfc000000 ) 	10010100000000000000000000000000 ( 0x94000000 )
27                    blr 	11111111111111111111110000011111 ( 0xfffffc1f ) 	11010110001111110000000000000000 ( 0xd63f0000 )
28                     br 	11111111111111111111110000011111 ( 0xfffffc1f ) 	11010110000111110000000000000000 ( 0xd61f0000 )
29                    brk 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100001000000000000000000000 ( 0xd4200000 )
30                   cbnz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110101000000000000000000000000 ( 0x35000000 )
31                    cbz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110100000000000000000000000000 ( 0x34000000 )
32               ccmn_imm 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	00111010010000000000100000000000 ( 0x3a400800 )
33               ccmn_reg 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	00111010010000000000000000000000 ( 0x3a400000 )
34               ccmp_imm 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	01111010010000000000100000000000 ( 0x7a400800 )
35               ccmp_reg 	01111111111000000000110000010000 ( 0x7fe00c10 ) 	01111010010000000000000000000000 ( 0x7a400000 )
36             cinc_csinc 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	00011010100000000000010000000000 ( 0x1a800400 )
37             cinv_csinv 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000000000000000 ( 0x5a800000 )
38                  clrex 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000001011111 ( 0xd503305f )
39                cls_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000001010000000000 ( 0x5ac01400 )
40                clz_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000001000000000000 ( 0x5ac01000 )
41    cmn_adds_addsub_ext 	01111111111000000000000000011111 ( 0x7fe0001f ) 	00101011001000000000000000011111 ( 0x2b20001f )
42    cmn_adds_addsub_imm 	01111111000000000000000000011111 ( 0x7f00001f ) 	00110001000000000000000000011111 ( 0x3100001f )
43  cmn_adds_addsub_shift 	01111111001000000000000000011111 ( 0x7f20001f ) 	00101011000000000000000000011111 ( 0x2b00001f )
44    cmp_subs_addsub_ext 	01111111111000000000000000011111 ( 0x7fe0001f ) 	01101011001000000000000000011111 ( 0x6b20001f )
45    cmp_subs_addsub_imm 	01111111000000000000000000011111 ( 0x7f00001f ) 	01110001000000000000000000011111 ( 0x7100001f )
46  cmp_subs_addsub_shift 	01111111001000000000000000011111 ( 0x7f20001f ) 	01101011000000000000000000011111 ( 0x6b00001f )
47             cneg_csneg 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000010000000000 ( 0x5a800400 )
48                  crc32 	01111111111000001111000000000000 ( 0x7fe0f000 ) 	00011010110000000100000000000000 ( 0x1ac04000 )
49                 crc32c 	01111111111000001111000000000000 ( 0x7fe0f000 ) 	00011010110000000101000000000000 ( 0x1ac05000 )
50                   csel 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	00011010100000000000000000000000 ( 0x1a800000 )
51             cset_csinc 	01111111111111110000111111100000 ( 0x7fff0fe0 ) 	00011010100111110000011111100000 ( 0x1a9f07e0 )
52            csetm_csinv 	01111111111111110000111111100000 ( 0x7fff0fe0 ) 	01011010100111110000001111100000 ( 0x5a9f03e0 )
53                  csinc 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	00011010100000000000010000000000 ( 0x1a800400 )
54                  csinv 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000000000000000 ( 0x5a800000 )
55                  csneg 	01111111111000000000110000000000 ( 0x7fe00c00 ) 	01011010100000000000010000000000 ( 0x5a800400 )
56                 dc_sys 	11111111111110001111000000000000 ( 0xfff8f000 ) 	11010101000010000111000000000000 ( 0xd5087000 )
57                  dcps1 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100101000000000000000000001 ( 0xd4a00001 )
58                  dcps2 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100101000000000000000000010 ( 0xd4a00002 )
59                  dcps3 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100101000000000000000000011 ( 0xd4a00003 )
60                    dmb 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000010111111 ( 0xd50330bf )
61                   drps 	11111111111111111111111111111111 ( 0xffffffff ) 	11010110101111110000001111100000 ( 0xd6bf03e0 )
62                    dsb 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000010011111 ( 0xd503309f )
63                    eon 	01111111001000000000000000000000 ( 0x7f200000 ) 	01001010001000000000000000000000 ( 0x4a200000 )
64            eor_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010010000000000000000000000000 ( 0x52000000 )
65          eor_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01001010000000000000000000000000 ( 0x4a000000 )
66                   eret 	11111111111111111111111111111111 ( 0xffffffff ) 	11010110100111110000001111100000 ( 0xd69f03e0 )
67                   extr 	01111111101000000000000000000000 ( 0x7fa00000 ) 	00010011100000000000000000000000 ( 0x13800000 )
68                   hint 	11111111111111111111000000011111 ( 0xfffff01f ) 	11010101000000110010000000011111 ( 0xd503201f )
69                    hlt 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100010000000000000000000000 ( 0xd4400000 )
70                    hvc 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100000000000000000000000010 ( 0xd4000002 )
71                 ic_sys 	11111111111110001111000000000000 ( 0xfff8f000 ) 	11010101000010000111000000000000 ( 0xd5087000 )
72                    isb 	11111111111111111111000011111111 ( 0xfffff0ff ) 	11010101000000110011000011011111 ( 0xd50330df )
73                   ldar 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000110000001000000000000000 ( 0x88c08000 )
74                  ldarb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000110000001000000000000000 ( 0x8c08000 )
75                  ldarh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000110000001000000000000000 ( 0x48c08000 )
76                  ldaxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000011000001000000000000000 ( 0x88608000 )
77                  ldaxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000010000001000000000000000 ( 0x88408000 )
78                 ldaxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000010000001000000000000000 ( 0x8408000 )
79                 ldaxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000010000001000000000000000 ( 0x48408000 )
80               ldnp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000010000000000000000000000 ( 0x28400000 )
81                ldp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000110000000000000000000000 ( 0x28c00000 )
82                  ldpsw 	11111111110000000000000000000000 ( 0xffc00000 ) 	01101000110000000000000000000000 ( 0x68c00000 )
83            ldr_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000010000000000010000000000 ( 0xb8400400 )
84            ldr_lit_gen 	10111111000000000000000000000000 ( 0xbf000000 ) 	00011000000000000000000000000000 ( 0x18000000 )
85            ldr_reg_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000011000000000100000000000 ( 0xb8600800 )
86               ldrb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000010000000000010000000000 ( 0x38400400 )
87               ldrb_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000011000000000100000000000 ( 0x38600800 )
88               ldrh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000010000000000010000000000 ( 0x78400400 )
89               ldrh_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000011000000000100000000000 ( 0x78600800 )
90              ldrsb_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000100000000000010000000000 ( 0x38800400 )
91              ldrsb_reg 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000101000000000100000000000 ( 0x38a00800 )
92              ldrsh_imm 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000100000000000010000000000 ( 0x78800400 )
93              ldrsh_reg 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000101000000000100000000000 ( 0x78a00800 )
94              ldrsw_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000100000000000010000000000 ( 0xb8800400 )
95              ldrsw_lit 	11111111000000000000000000000000 ( 0xff000000 ) 	10011000000000000000000000000000 ( 0x98000000 )
96              ldrsw_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000101000000000100000000000 ( 0xb8a00800 )
97                   ldtr 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000010000000000100000000000 ( 0xb8400800 )
98                  ldtrb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000010000000000100000000000 ( 0x38400800 )
99                  ldtrh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000010000000000100000000000 ( 0x78400800 )
100                 ldtrsb 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000100000000000100000000000 ( 0x38800800 )
101                 ldtrsh 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000100000000000100000000000 ( 0x78800800 )
102                 ldtrsw 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000100000000000100000000000 ( 0xb8800800 )
103               ldur_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000010000000000000000000000 ( 0xb8400000 )
104                  ldurb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000010000000000000000000000 ( 0x38400000 )
105                  ldurh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000010000000000000000000000 ( 0x78400000 )
106                 ldursb 	11111111101000000000110000000000 ( 0xffa00c00 ) 	00111000100000000000000000000000 ( 0x38800000 )
107                 ldursh 	11111111101000000000110000000000 ( 0xffa00c00 ) 	01111000100000000000000000000000 ( 0x78800000 )
108                 ldursw 	11111111111000000000110000000000 ( 0xffe00c00 ) 	10111000100000000000000000000000 ( 0xb8800000 )
109                   ldxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000011000000000000000000000 ( 0x88600000 )
110                   ldxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000010000000000000000000000 ( 0x88400000 )
111                  ldxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000010000000000000000000000 ( 0x8400000 )
112                  ldxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000010000000000000000000000 ( 0x48400000 )
113               lsl_lslv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010000000000000 ( 0x1ac02000 )
114               lsl_ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
115                   lslv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010000000000000 ( 0x1ac02000 )
116               lsr_lsrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010010000000000 ( 0x1ac02400 )
117               lsr_ubfm 	01111111100000000111110000000000 ( 0x7f807c00 ) 	01010011000000000111110000000000 ( 0x53007c00 )
118                   lsrv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010010000000000 ( 0x1ac02400 )
119                   madd 	01111111111000001000000000000000 ( 0x7fe08000 ) 	00011011000000000000000000000000 ( 0x1b000000 )
120              mneg_msub 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011011000000001111110000000000 ( 0x1b00fc00 )
121     mov_add_addsub_imm 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	00010001000000000000000000000000 ( 0x11000000 )
122               mov_movn 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010010100000000000000000000000 ( 0x12800000 )
123               mov_movz 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010010100000000000000000000000 ( 0x52800000 )
124        mov_orr_log_imm 	01111111100000000000001111100000 ( 0x7f8003e0 ) 	00110010000000000000001111100000 ( 0x320003e0 )
125      mov_orr_log_shift 	01111111111000001111111111100000 ( 0x7fe0ffe0 ) 	00101010000000000000001111100000 ( 0x2a0003e0 )
126                   movk 	01111111100000000000000000000000 ( 0x7f800000 ) 	01110010100000000000000000000000 ( 0x72800000 )
127                   movn 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010010100000000000000000000000 ( 0x12800000 )
128                   movz 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010010100000000000000000000000 ( 0x52800000 )
129                    mrs 	11111111111100000000000000000000 ( 0xfff00000 ) 	11010101001100000000000000000000 ( 0xd5300000 )
130                msr_imm 	11111111111110001111000000011111 ( 0xfff8f01f ) 	11010101000000000100000000011111 ( 0xd500401f )
131                msr_reg 	11111111111100000000000000000000 ( 0xfff00000 ) 	11010101000100000000000000000000 ( 0xd5100000 )
132                   msub 	01111111111000001000000000000000 ( 0x7fe08000 ) 	00011011000000001000000000000000 ( 0x1b008000 )
133               mul_madd 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011011000000000111110000000000 ( 0x1b007c00 )
134      mvn_orn_log_shift 	01111111001000000000001111100000 ( 0x7f2003e0 ) 	00101010001000000000001111100000 ( 0x2a2003e0 )
135   neg_sub_addsub_shift 	01111111001000000000001111100000 ( 0x7f2003e0 ) 	01001011000000000000001111100000 ( 0x4b0003e0 )
136 negs_subs_addsub_shift 	01111111001000000000001111100000 ( 0x7f2003e0 ) 	01101011000000000000001111100000 ( 0x6b0003e0 )
137                ngc_sbc 	01111111111000001111111111100000 ( 0x7fe0ffe0 ) 	01011010000000000000001111100000 ( 0x5a0003e0 )
138              ngcs_sbcs 	01111111111000001111111111100000 ( 0x7fe0ffe0 ) 	01111010000000000000001111100000 ( 0x7a0003e0 )
139               nop_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000000011111 ( 0xd503201f )
140          orn_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00101010001000000000000000000000 ( 0x2a200000 )
141            orr_log_imm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00110010000000000000000000000000 ( 0x32000000 )
142          orr_log_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	00101010000000000000000000000000 ( 0x2a000000 )
143               prfm_imm 	11111111110000000000000000000000 ( 0xffc00000 ) 	11111001100000000000000000000000 ( 0xf9800000 )
144               prfm_lit 	11111111000000000000000000000000 ( 0xff000000 ) 	11011000000000000000000000000000 ( 0xd8000000 )
145               prfm_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	11111000101000000000100000000000 ( 0xf8a00800 )
146                  prfum 	11111111111000000000110000000000 ( 0xffe00c00 ) 	11111000100000000000000000000000 ( 0xf8800000 )
147               rbit_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000000000000000000 ( 0x5ac00000 )
148                    ret 	11111111111111111111110000011111 ( 0xfffffc1f ) 	11010110010111110000000000000000 ( 0xd65f0000 )
149                    rev 	01111111111111111111100000000000 ( 0x7ffff800 ) 	01011010110000000000100000000000 ( 0x5ac00800 )
150              rev16_int 	01111111111111111111110000000000 ( 0x7ffffc00 ) 	01011010110000000000010000000000 ( 0x5ac00400 )
151              rev32_int 	11111111111111111111110000000000 ( 0xfffffc00 ) 	11011010110000000000100000000000 ( 0xdac00800 )
152               ror_extr 	01111111101000000000000000000000 ( 0x7fa00000 ) 	00010011100000000000000000000000 ( 0x13800000 )
153               ror_rorv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010110000000000 ( 0x1ac02c00 )
154                   rorv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000010110000000000 ( 0x1ac02c00 )
155                    sbc 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	01011010000000000000000000000000 ( 0x5a000000 )
156                   sbcs 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	01111010000000000000000000000000 ( 0x7a000000 )
157             sbfiz_sbfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010011000000000000000000000000 ( 0x13000000 )
158                   sbfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010011000000000000000000000000 ( 0x13000000 )
159              sbfx_sbfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	00010011000000000000000000000000 ( 0x13000000 )
160                   sdiv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000000110000000000 ( 0x1ac00c00 )
161               sev_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000010011111 ( 0xd503209f )
162              sevl_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000010111111 ( 0xd50320bf )
163                 smaddl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011001000000000000000000000 ( 0x9b200000 )
164                    smc 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100000000000000000000000011 ( 0xd4000003 )
165          smnegl_smsubl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011001000001111110000000000 ( 0x9b20fc00 )
166                 smsubl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011001000001000000000000000 ( 0x9b208000 )
167                  smulh 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011010000000000000000000000 ( 0x9b400000 )
168           smull_smaddl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011001000000111110000000000 ( 0x9b207c00 )
169                   stlr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000100000001000000000000000 ( 0x88808000 )
170                  stlrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000100000001000000000000000 ( 0x8808000 )
171                  stlrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000100000001000000000000000 ( 0x48808000 )
172                  stlxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000001000001000000000000000 ( 0x88208000 )
173                  stlxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000000000001000000000000000 ( 0x88008000 )
174                 stlxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000000000001000000000000000 ( 0x8008000 )
175                 stlxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000000000001000000000000000 ( 0x48008000 )
176               stnp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000000000000000000000000000 ( 0x28000000 )
177                stp_gen 	01111111110000000000000000000000 ( 0x7fc00000 ) 	00101000100000000000000000000000 ( 0x28800000 )
178            str_imm_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000000000000000010000000000 ( 0xb8000400 )
179            str_reg_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000001000000000100000000000 ( 0xb8200800 )
180               strb_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000000000000000010000000000 ( 0x38000400 )
181               strb_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000001000000000100000000000 ( 0x38200800 )
182               strh_imm 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000000000000000010000000000 ( 0x78000400 )
183               strh_reg 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000001000000000100000000000 ( 0x78200800 )
184                   sttr 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000000000000000100000000000 ( 0xb8000800 )
185                  sttrb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000000000000000100000000000 ( 0x38000800 )
186                  sttrh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000000000000000100000000000 ( 0x78000800 )
187               stur_gen 	10111111111000000000110000000000 ( 0xbfe00c00 ) 	10111000000000000000000000000000 ( 0xb8000000 )
188                  sturb 	11111111111000000000110000000000 ( 0xffe00c00 ) 	00111000000000000000000000000000 ( 0x38000000 )
189                  sturh 	11111111111000000000110000000000 ( 0xffe00c00 ) 	01111000000000000000000000000000 ( 0x78000000 )
190                   stxp 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000001000000000000000000000 ( 0x88200000 )
191                   stxr 	10111111111000001000000000000000 ( 0xbfe08000 ) 	10001000000000000000000000000000 ( 0x88000000 )
192                  stxrb 	11111111111000001000000000000000 ( 0xffe08000 ) 	00001000000000000000000000000000 ( 0x8000000 )
193                  stxrh 	11111111111000001000000000000000 ( 0xffe08000 ) 	01001000000000000000000000000000 ( 0x48000000 )
194         sub_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	01001011001000000000000000000000 ( 0x4b200000 )
195         sub_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	01010001000000000000000000000000 ( 0x51000000 )
196       sub_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01001011000000000000000000000000 ( 0x4b000000 )
197        subs_addsub_ext 	01111111111000000000000000000000 ( 0x7fe00000 ) 	01101011001000000000000000000000 ( 0x6b200000 )
198        subs_addsub_imm 	01111111000000000000000000000000 ( 0x7f000000 ) 	01110001000000000000000000000000 ( 0x71000000 )
199      subs_addsub_shift 	01111111001000000000000000000000 ( 0x7f200000 ) 	01101011000000000000000000000000 ( 0x6b000000 )
200                    svc 	11111111111000000000000000011111 ( 0xffe0001f ) 	11010100000000000000000000000001 ( 0xd4000001 )
201              sxtb_sbfm 	01111111101111111111110000000000 ( 0x7fbffc00 ) 	00010011000000000001110000000000 ( 0x13001c00 )
202              sxth_sbfm 	01111111101111111111110000000000 ( 0x7fbffc00 ) 	00010011000000000011110000000000 ( 0x13003c00 )
203              sxtw_sbfm 	11111111111111111111110000000000 ( 0xfffffc00 ) 	10010011010000000111110000000000 ( 0x93407c00 )
204                    sys 	11111111111110000000000000000000 ( 0xfff80000 ) 	11010101000010000000000000000000 ( 0xd5080000 )
205                   sysl 	11111111111110000000000000000000 ( 0xfff80000 ) 	11010101001010000000000000000000 ( 0xd5280000 )
206                   tbnz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110111000000000000000000000000 ( 0x37000000 )
207                    tbz 	01111111000000000000000000000000 ( 0x7f000000 ) 	00110110000000000000000000000000 ( 0x36000000 )
208               tlbi_sys 	11111111111110001111000000000000 ( 0xfff8f000 ) 	11010101000010001000000000000000 ( 0xd5088000 )
209       tst_ands_log_imm 	01111111100000000000000000011111 ( 0x7f80001f ) 	01110010000000000000000000011111 ( 0x7200001f )
210     tst_ands_log_shift 	01111111001000000000000000011111 ( 0x7f20001f ) 	01101010000000000000000000011111 ( 0x6a00001f )
211             ubfiz_ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
212                   ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
213              ubfx_ubfm 	01111111100000000000000000000000 ( 0x7f800000 ) 	01010011000000000000000000000000 ( 0x53000000 )
214                   udiv 	01111111111000001111110000000000 ( 0x7fe0fc00 ) 	00011010110000000000100000000000 ( 0x1ac00800 )
215                 umaddl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011101000000000000000000000 ( 0x9ba00000 )
216          umnegl_umsubl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011101000001111110000000000 ( 0x9ba0fc00 )
217                 umsubl 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011101000001000000000000000 ( 0x9ba08000 )
218                  umulh 	11111111111000001000000000000000 ( 0xffe08000 ) 	10011011110000000000000000000000 ( 0x9bc00000 )
219           umull_umaddl 	11111111111000001111110000000000 ( 0xffe0fc00 ) 	10011011101000000111110000000000 ( 0x9ba07c00 )
220              uxtb_ubfm 	11111111111111111111110000000000 ( 0xfffffc00 ) 	01010011000000000001110000000000 ( 0x53001c00 )
221              uxth_ubfm 	11111111111111111111110000000000 ( 0xfffffc00 ) 	01010011000000000011110000000000 ( 0x53003c00 )
222               wfe_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000001011111 ( 0xd503205f )
223               wfi_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000001111111 ( 0xd503207f )
224             yield_hint 	11111111111111111111111111111111 ( 0xffffffff ) 	11010101000000110010000000111111 ( 0xd503203f )
225
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_adc, 	"adc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_adcs, 	"adcs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_add_addsub_ext, 	"add	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_add_addsub_imm, 	"add	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_add_addsub_shift, 	"add	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_adds_addsub_ext, 	"adds	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_adds_addsub_imm, 	"adds	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_adds_addsub_shift, 	"adds	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_adr, 	"adr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_adrp, 	"adrp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_and_log_imm, 	"and	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_and_log_shift, 	"and	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ands_log_imm, 	"ands	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ands_log_shift, 	"ands	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_asr_asrv, 	"asr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_asr_sbfm, 	"asr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_asrv, 	"asrv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_at_sys, 	"at	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_b_cond, 	"b	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_b_uncond, 	"b	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_bfi_bfm, 	"bfi	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_bfm, 	"bfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_bfxil_bfm, 	"bfxil	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_bic_log_shift, 	"bic	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_bics, 	"bics	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_bl, 	"bl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_blr, 	"blr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_br, 	"br	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_brk, 	"brk	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cbnz, 	"cbnz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cbz, 	"cbz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ccmn_imm, 	"ccmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ccmn_reg, 	"ccmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ccmp_imm, 	"ccmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ccmp_reg, 	"ccmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cinc_csinc, 	"cinc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cinv_csinv, 	"cinv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_clrex, 	"clrex	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cls_int, 	"cls	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_clz_int, 	"clz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cmn_adds_addsub_ext, 	"cmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cmn_adds_addsub_imm, 	"cmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cmn_adds_addsub_shift, 	"cmn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cmp_subs_addsub_ext, 	"cmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cmp_subs_addsub_imm, 	"cmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cmp_subs_addsub_shift, 	"cmp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cneg_csneg, 	"cneg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_crc32, 	"crc32	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_crc32c, 	"crc32c	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_csel, 	"csel	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_cset_csinc, 	"cset	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_csetm_csinv, 	"csetm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_csinc, 	"csinc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_csinv, 	"csinv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_csneg, 	"csneg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_dc_sys, 	"dc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_dcps1, 	"dcps1	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_dcps2, 	"dcps2	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_dcps3, 	"dcps3	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_dmb, 	"dmb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_drps, 	"drps	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_dsb, 	"dsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_eon, 	"eon	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_eor_log_imm, 	"eor	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_eor_log_shift, 	"eor	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_eret, 	"eret	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_extr, 	"extr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_hint, 	"hint	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_hlt, 	"hlt	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_hvc, 	"hvc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ic_sys, 	"ic	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_isb, 	"isb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldar, 	"ldar	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldarb, 	"ldarb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldarh, 	"ldarh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldaxp, 	"ldaxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldaxr, 	"ldaxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldaxrb, 	"ldaxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldaxrh, 	"ldaxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldnp_gen, 	"ldnp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldp_gen, 	"ldp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldpsw, 	"ldpsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldr_imm_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldr_lit_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldr_reg_gen, 	"ldr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrb_imm, 	"ldrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrb_reg, 	"ldrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrh_imm, 	"ldrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrh_reg, 	"ldrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrsb_imm, 	"ldrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrsb_reg, 	"ldrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrsh_imm, 	"ldrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrsh_reg, 	"ldrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrsw_imm, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrsw_lit, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldrsw_reg, 	"ldrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldtr, 	"ldtr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldtrb, 	"ldtrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldtrh, 	"ldtrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldtrsb, 	"ldtrsb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldtrsh, 	"ldtrsh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldtrsw, 	"ldtrsw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldur_gen, 	"ldur	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldurb, 	"ldurb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldurh, 	"ldurh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldursb, 	"ldursb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldursh, 	"ldursh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldursw, 	"ldursw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldxp, 	"ldxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldxr, 	"ldxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldxrb, 	"ldxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ldxrh, 	"ldxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_lsl_lslv, 	"lsl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_lsl_ubfm, 	"lsl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_lslv, 	"lslv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_lsr_lsrv, 	"lsr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_lsr_ubfm, 	"lsr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_lsrv, 	"lsrv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_madd, 	"madd	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mneg_msub, 	"mneg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mov_add_addsub_imm, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mov_movn, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mov_movz, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mov_orr_log_imm, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mov_orr_log_shift, 	"mov	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_movk, 	"movk	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_movn, 	"movn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_movz, 	"movz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mrs, 	"mrs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_msr_imm, 	"msr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_msr_reg, 	"msr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_msub, 	"msub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mul_madd, 	"mul	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_mvn_orn_log_shift, 	"mvn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_neg_sub_addsub_shift, 	"neg	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_negs_subs_addsub_shift, 	"negs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ngc_sbc, 	"ngc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ngcs_sbcs, 	"ngcs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_nop_hint, 	"nop	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_orn_log_shift, 	"orn	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_orr_log_imm, 	"orr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_orr_log_shift, 	"orr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_prfm_imm, 	"prfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_prfm_lit, 	"prfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_prfm_reg, 	"prfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_prfum, 	"prfum	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_rbit_int, 	"rbit	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ret, 	"ret	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_rev, 	"rev	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_rev16_int, 	"rev16	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_rev32_int, 	"rev32	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ror_extr, 	"ror	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ror_rorv, 	"ror	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_rorv, 	"rorv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sbc, 	"sbc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sbcs, 	"sbcs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sbfiz_sbfm, 	"sbfiz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sbfm, 	"sbfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sbfx_sbfm, 	"sbfx	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sdiv, 	"sdiv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sev_hint, 	"sev	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sevl_hint, 	"sevl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_smaddl, 	"smaddl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_smc, 	"smc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_smnegl_smsubl, 	"smnegl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_smsubl, 	"smsubl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_smulh, 	"smulh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_smull_smaddl, 	"smull	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stlr, 	"stlr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stlrb, 	"stlrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stlrh, 	"stlrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stlxp, 	"stlxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stlxr, 	"stlxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stlxrb, 	"stlxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stlxrh, 	"stlxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stnp_gen, 	"stnp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stp_gen, 	"stp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_str_imm_gen, 	"str	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_str_reg_gen, 	"str	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_strb_imm, 	"strb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_strb_reg, 	"strb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_strh_imm, 	"strh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_strh_reg, 	"strh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sttr, 	"sttr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sttrb, 	"sttrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sttrh, 	"sttrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stur_gen, 	"stur	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sturb, 	"sturb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sturh, 	"sturh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stxp, 	"stxp	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stxr, 	"stxr	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stxrb, 	"stxrb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_stxrh, 	"stxrh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sub_addsub_ext, 	"sub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sub_addsub_imm, 	"sub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sub_addsub_shift, 	"sub	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_subs_addsub_ext, 	"subs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_subs_addsub_imm, 	"subs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_subs_addsub_shift, 	"subs	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_svc, 	"svc	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sxtb_sbfm, 	"sxtb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sxth_sbfm, 	"sxth	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sxtw_sbfm, 	"sxtw	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sys, 	"sys	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_sysl, 	"sysl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_tbnz, 	"tbnz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_tbz, 	"tbz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_tlbi_sys, 	"tlbi	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_tst_ands_log_imm, 	"tst	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_tst_ands_log_shift, 	"tst	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ubfiz_ubfm, 	"ubfiz	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ubfm, 	"ubfm	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_ubfx_ubfm, 	"ubfx	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_udiv, 	"udiv	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_umaddl, 	"umaddl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_umnegl_umsubl, 	"umnegl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_umsubl, 	"umsubl	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_umulh, 	"umulh	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_umull_umaddl, 	"umull	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_uxtb_ubfm, 	"uxtb	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_uxth_ubfm, 	"uxth	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_wfe_hint, 	"wfe	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_wfi_hint, 	"wfi	", list_of() ));
	aarch64_insn_table.push_back(aarch64_entry(aarch64_op_yield_hint, 	"yield	", list_of() ));
mask_table[0]=mask_entry(0x10000000, 1, 2,0);
mask_table[1]=mask_entry(0x8000000, 3, 4,0);
mask_table[3]=mask_entry( 0, -1, -1,0);
mask_table[4]=mask_entry(0x20000000, 9, 10,0);
mask_table[9]=mask_entry(0x4000000, 19, 20,0);
mask_table[19]=mask_entry(0x2000000, 39, 40,0);
mask_table[39]=mask_entry(0x80000000, 79, 80,0);
mask_table[79]=mask_entry(0x40000000, 159, 160,0);
mask_table[159]=mask_entry(0x1000000, 319, 320,0);
mask_table[319]=mask_entry(0x800000, 639, 640,0);
mask_table[639]=mask_entry(0x400000, 1279, 1280,0);
mask_table[1279]=mask_entry(0x200000, 2559, 2560,0);
mask_table[2559]=mask_entry(0x8000, 5119, 5120,0);
mask_table[5119]=mask_entry( 0, -1, -1,192);
mask_table[5120]=mask_entry( 0, -1, -1,174);
mask_table[1280]=mask_entry(0x200000, 2561, 2562,0);
mask_table[2561]=mask_entry(0x8000, 5123, 5124,0);
mask_table[5123]=mask_entry( 0, -1, -1,111);
mask_table[5124]=mask_entry( 0, -1, -1,78);
mask_table[640]=mask_entry(0x400000, 1281, 1282,0);
mask_table[1281]=mask_entry( 0, -1, -1,170);
mask_table[1282]=mask_entry( 0, -1, -1,74);
mask_table[160]=mask_entry(0x1000000, 321, 322,0);
mask_table[321]=mask_entry(0x800000, 643, 644,0);
mask_table[643]=mask_entry(0x400000, 1287, 1288,0);
mask_table[1287]=mask_entry(0x200000, 2575, 2576,0);
mask_table[2575]=mask_entry(0x8000, 5151, 5152,0);
mask_table[5151]=mask_entry( 0, -1, -1,193);
mask_table[5152]=mask_entry( 0, -1, -1,175);
mask_table[1288]=mask_entry(0x200000, 2577, 2578,0);
mask_table[2577]=mask_entry(0x8000, 5155, 5156,0);
mask_table[5155]=mask_entry( 0, -1, -1,112);
mask_table[5156]=mask_entry( 0, -1, -1,79);
mask_table[644]=mask_entry(0x400000, 1289, 1290,0);
mask_table[1289]=mask_entry( 0, -1, -1,171);
mask_table[1290]=mask_entry( 0, -1, -1,75);
mask_table[80]=mask_entry(0x1000000, 161, 162,0);
mask_table[161]=mask_entry(0x800000, 323, 324,0);
mask_table[323]=mask_entry(0x400000, 647, 648,0);
mask_table[647]=mask_entry(0x200000, 1295, 1296,0);
mask_table[1295]=mask_entry(0x8000, 2591, 2592,0);
mask_table[2591]=mask_entry( 0, -1, -1,191);
mask_table[2592]=mask_entry( 0, -1, -1,173);
mask_table[1296]=mask_entry(0x8000, 2593, 2594,0);
mask_table[2593]=mask_entry( 0, -1, -1,190);
mask_table[2594]=mask_entry( 0, -1, -1,172);
mask_table[648]=mask_entry(0x200000, 1297, 1298,0);
mask_table[1297]=mask_entry(0x8000, 2595, 2596,0);
mask_table[2595]=mask_entry( 0, -1, -1,110);
mask_table[2596]=mask_entry( 0, -1, -1,77);
mask_table[1298]=mask_entry(0x8000, 2597, 2598,0);
mask_table[2597]=mask_entry( 0, -1, -1,109);
mask_table[2598]=mask_entry( 0, -1, -1,76);
mask_table[324]=mask_entry(0x400000, 649, 650,0);
mask_table[649]=mask_entry( 0, -1, -1,169);
mask_table[650]=mask_entry( 0, -1, -1,73);
mask_table[40]=mask_entry(0x40000000, 81, 82,0);
mask_table[81]=mask_entry(0x1000000, 163, 164,0);
mask_table[163]=mask_entry(0x200000, 327, 328,0);
mask_table[327]=mask_entry( 0, -1, -1,12);
mask_table[328]=mask_entry( 0, -1, -1,24);
mask_table[164]=mask_entry(0x200000, 329, 330,0);
mask_table[329]=mask_entry( 0, -1, -1,5);
mask_table[330]=mask_entry( 0, -1, -1,3);
mask_table[82]=mask_entry(0x1000000, 165, 166,0);
mask_table[165]=mask_entry(0x200000, 331, 332,0);
mask_table[331]=mask_entry( 0, -1, -1,65);
mask_table[332]=mask_entry( 0, -1, -1,63);
mask_table[166]=mask_entry(0x200000, 333, 334,0);
mask_table[333]=mask_entry(0x200, 667, 668,0);
mask_table[667]=mask_entry( 0, -1, -1,196);
mask_table[668]=mask_entry( 0, -1, -1,135);
mask_table[334]=mask_entry( 0, -1, -1,194);
mask_table[10]=mask_entry(0x40000000, 21, 22,0);
mask_table[21]=mask_entry(0x4000000, 43, 44,0);
mask_table[43]=mask_entry(0x2000000, 87, 88,0);
mask_table[87]=mask_entry(0x1000000, 175, 176,0);
mask_table[175]=mask_entry(0x800000, 351, 352,0);
mask_table[351]=mask_entry(0x400000, 703, 704,0);
mask_table[703]=mask_entry( 0, -1, -1,176);
mask_table[704]=mask_entry( 0, -1, -1,80);
mask_table[352]=mask_entry(0x400000, 705, 706,0);
mask_table[705]=mask_entry( 0, -1, -1,177);
mask_table[706]=mask_entry( 0, -1, -1,81);
mask_table[88]=mask_entry(0x1000000, 177, 178,0);
mask_table[177]=mask_entry(0x200000, 355, 356,0);
mask_table[355]=mask_entry(0x200, 711, 712,0);
mask_table[711]=mask_entry( 0, -1, -1,142);
mask_table[712]=mask_entry( 0, -1, -1,125);
mask_table[356]=mask_entry(0x200, 713, 714,0);
mask_table[713]=mask_entry( 0, -1, -1,140);
mask_table[714]=mask_entry( 0, -1, -1,134);
mask_table[178]=mask_entry(0x200000, 357, 358,0);
mask_table[357]=mask_entry(0x10, 715, 716,0);
mask_table[715]=mask_entry( 0, -1, -1,8);
mask_table[716]=mask_entry( 0, -1, -1,43);
mask_table[358]=mask_entry(0x800000, 717, 718,0);
mask_table[717]=mask_entry(0x400000, 1435, 1436,0);
mask_table[1435]=mask_entry(0x10, 2871, 2872,0);
mask_table[2871]=mask_entry( 0, -1, -1,6);
mask_table[2872]=mask_entry( 0, -1, -1,41);
mask_table[22]=mask_entry(0x4000000, 45, 46,0);
mask_table[45]=mask_entry(0x2000000, 91, 92,0);
mask_table[91]=mask_entry( 0, -1, -1,82);
mask_table[92]=mask_entry(0x1000000, 185, 186,0);
mask_table[185]=mask_entry(0x200000, 371, 372,0);
mask_table[371]=mask_entry(0x10, 743, 744,0);
mask_table[743]=mask_entry( 0, -1, -1,14);
mask_table[744]=mask_entry( 0, -1, -1,210);
mask_table[372]=mask_entry( 0, -1, -1,25);
mask_table[186]=mask_entry(0x200000, 373, 374,0);
mask_table[373]=mask_entry(0x200, 747, 748,0);
mask_table[747]=mask_entry(0x10, 1495, 1496,0);
mask_table[1495]=mask_entry( 0, -1, -1,199);
mask_table[1496]=mask_entry( 0, -1, -1,46);
mask_table[748]=mask_entry( 0, -1, -1,136);
mask_table[374]=mask_entry(0x800000, 749, 750,0);
mask_table[749]=mask_entry(0x400000, 1499, 1500,0);
mask_table[1499]=mask_entry(0x10, 2999, 3000,0);
mask_table[2999]=mask_entry( 0, -1, -1,197);
mask_table[3000]=mask_entry( 0, -1, -1,44);
mask_table[2]=mask_entry(0x8000000, 5, 6,0);
mask_table[5]=mask_entry(0x4000000, 11, 12,0);
mask_table[11]=mask_entry(0x2000000, 23, 24,0);
mask_table[23]=mask_entry(0x1000000, 47, 48,0);
mask_table[47]=mask_entry(0x80000000, 95, 96,0);
mask_table[95]=mask_entry( 0, -1, -1,9);
mask_table[96]=mask_entry( 0, -1, -1,10);
mask_table[48]=mask_entry(0x40000000, 97, 98,0);
mask_table[97]=mask_entry(0x20000000, 195, 196,0);
mask_table[195]=mask_entry( 0, -1, -1,4);
mask_table[196]=mask_entry(0x10, 393, 394,0);
mask_table[393]=mask_entry( 0, -1, -1,7);
mask_table[394]=mask_entry( 0, -1, -1,42);
mask_table[98]=mask_entry(0x20000000, 197, 198,0);
mask_table[197]=mask_entry( 0, -1, -1,195);
mask_table[198]=mask_entry(0x10, 397, 398,0);
mask_table[397]=mask_entry( 0, -1, -1,198);
mask_table[398]=mask_entry( 0, -1, -1,45);
mask_table[24]=mask_entry(0x40000000, 49, 50,0);
mask_table[49]=mask_entry(0x20000000, 99, 100,0);
mask_table[99]=mask_entry(0x1000000, 199, 200,0);
mask_table[199]=mask_entry(0x800000, 399, 400,0);
mask_table[399]=mask_entry( 0, -1, -1,11);
mask_table[400]=mask_entry( 0, -1, -1,122);
mask_table[200]=mask_entry(0x800000, 401, 402,0);
mask_table[401]=mask_entry(0x80000000, 803, 804,0);
mask_table[803]=mask_entry(0x4000, 1607, 1608,0);
mask_table[1607]=mask_entry(0x2000, 3215, 3216,0);
mask_table[3215]=mask_entry(0x1000, 6431, 6432,0);
mask_table[6431]=mask_entry( 0, -1, -1,157);
mask_table[6432]=mask_entry( 0, -1, -1,201);
mask_table[3216]=mask_entry( 0, -1, -1,202);
mask_table[1608]=mask_entry( 0, -1, -1,16);
mask_table[804]=mask_entry( 0, -1, -1,203);
mask_table[402]=mask_entry(0x200000, 805, 806,0);
mask_table[805]=mask_entry( 0, -1, -1,67);
mask_table[100]=mask_entry(0x1000000, 201, 202,0);
mask_table[201]=mask_entry(0x800000, 403, 404,0);
mask_table[403]=mask_entry(0x200, 807, 808,0);
mask_table[807]=mask_entry( 0, -1, -1,141);
mask_table[808]=mask_entry( 0, -1, -1,124);
mask_table[202]=mask_entry(0x800000, 405, 406,0);
mask_table[405]=mask_entry( 0, -1, -1,21);
mask_table[50]=mask_entry(0x20000000, 101, 102,0);
mask_table[101]=mask_entry(0x1000000, 203, 204,0);
mask_table[203]=mask_entry(0x800000, 407, 408,0);
mask_table[407]=mask_entry( 0, -1, -1,64);
mask_table[408]=mask_entry( 0, -1, -1,123);
mask_table[204]=mask_entry(0x800000, 409, 410,0);
mask_table[409]=mask_entry(0x4000, 819, 820,0);
mask_table[819]=mask_entry(0x2000, 1639, 1640,0);
mask_table[1639]=mask_entry(0x1000, 3279, 3280,0);
mask_table[3279]=mask_entry( 0, -1, -1,114);
mask_table[3280]=mask_entry( 0, -1, -1,220);
mask_table[1640]=mask_entry( 0, -1, -1,221);
mask_table[820]=mask_entry( 0, -1, -1,117);
mask_table[102]=mask_entry(0x1000000, 205, 206,0);
mask_table[205]=mask_entry(0x800000, 411, 412,0);
mask_table[411]=mask_entry(0x10, 823, 824,0);
mask_table[823]=mask_entry( 0, -1, -1,13);
mask_table[824]=mask_entry( 0, -1, -1,209);
mask_table[412]=mask_entry( 0, -1, -1,126);
mask_table[12]=mask_entry(0x40000000, 25, 26,0);
mask_table[25]=mask_entry(0x20000000, 51, 52,0);
mask_table[51]=mask_entry(0x80000000, 103, 104,0);
mask_table[103]=mask_entry( 0, -1, -1,20);
mask_table[104]=mask_entry( 0, -1, -1,26);
mask_table[52]=mask_entry(0x2000000, 105, 106,0);
mask_table[105]=mask_entry(0x1000000, 211, 212,0);
mask_table[211]=mask_entry( 0, -1, -1,31);
mask_table[212]=mask_entry( 0, -1, -1,30);
mask_table[106]=mask_entry(0x1000000, 213, 214,0);
mask_table[213]=mask_entry( 0, -1, -1,207);
mask_table[214]=mask_entry( 0, -1, -1,206);
mask_table[26]=mask_entry(0x80000000, 53, 54,0);
mask_table[53]=mask_entry( 0, -1, -1,19);
mask_table[54]=mask_entry(0x20000000, 109, 110,0);
mask_table[109]=mask_entry(0x2000000, 219, 220,0);
mask_table[219]=mask_entry(0x1000000, 439, 440,0);
mask_table[439]=mask_entry(0x800000, 879, 880,0);
mask_table[879]=mask_entry(0x400000, 1759, 1760,0);
mask_table[1759]=mask_entry(0x200000, 3519, 3520,0);
mask_table[3519]=mask_entry(0x10, 7039, 7040,0);
mask_table[7039]=mask_entry(0x8, 14079, 14080,0);
mask_table[14079]=mask_entry(0x4, 28159, 28160,0);
mask_table[28159]=mask_entry(0x2, 56319, 56320,0);
mask_table[56319]=mask_entry( 0, -1, -1,200);
mask_table[56320]=mask_entry(0x1, 112641, 112642,0);
mask_table[112641]=mask_entry( 0, -1, -1,70);
mask_table[112642]=mask_entry( 0, -1, -1,164);
mask_table[3520]=mask_entry( 0, -1, -1,29);
mask_table[1760]=mask_entry( 0, -1, -1,69);
mask_table[880]=mask_entry(0x400000, 1761, 1762,0);
mask_table[1761]=mask_entry(0x200000, 3523, 3524,0);
mask_table[3524]=mask_entry(0x10, 7049, 7050,0);
mask_table[7049]=mask_entry(0x8, 14099, 14100,0);
mask_table[14099]=mask_entry(0x4, 28199, 28200,0);
mask_table[28199]=mask_entry(0x2, 56399, 56400,0);
mask_table[56399]=mask_entry( 0, -1, -1,57);
mask_table[56400]=mask_entry(0x1, 112801, 112802,0);
mask_table[112801]=mask_entry( 0, -1, -1,58);
mask_table[112802]=mask_entry( 0, -1, -1,59);
mask_table[440]=mask_entry(0x800000, 881, 882,0);
mask_table[881]=mask_entry(0x400000, 1763, 1764,0);
mask_table[1763]=mask_entry(0x200000, 3527, 3528,0);
mask_table[3527]=mask_entry(0x100000, 7055, 7056,0);
mask_table[7055]=mask_entry(0x80000, 14111, 14112,0);
mask_table[14111]=mask_entry(0x8000, 28223, 28224,0);
mask_table[28223]=mask_entry(0x4000, 56447, 56448,0);
mask_table[56447]=mask_entry(0x40000, 112895, 112896,0);
mask_table[112895]=mask_entry(0x20000, 225791, 225792,0);
mask_table[225792]=mask_entry(0x10000, 451585, 451586,0);
mask_table[451586]=mask_entry(0x2000, 903173, 903174,0);
mask_table[903174]=mask_entry(0x1000, 1806349, 1806350,0);
mask_table[1806349]=mask_entry(0x10, 3612699, 3612700,0);
mask_table[3612700]=mask_entry(0x8, 7225401, 7225402,0);
mask_table[7225402]=mask_entry(0x4, 14450805, 14450806,0);
mask_table[14450806]=mask_entry(0x2, 28901613, 28901614,0);
mask_table[28901614]=mask_entry(0x1, 57803229, 57803230,0);
mask_table[57803230]=mask_entry(0x20, 115606461, 115606462,0);
mask_table[115606461]=mask_entry(0x80, 231212923, 231212924,0);
mask_table[231212923]=mask_entry(0x40, 462425847, 462425848,0);
mask_table[462425847]=mask_entry( 0, -1, -1,68);
mask_table[462425848]=mask_entry( 0, -1, -1,222);
mask_table[231212924]=mask_entry( 0, -1, -1,161);
mask_table[115606462]=mask_entry(0x800, 231212925, 231212926,0);
mask_table[231212925]=mask_entry(0x400, 462425851, 462425852,0);
mask_table[462425851]=mask_entry(0x200, 924851703, 924851704,0);
mask_table[924851703]=mask_entry(0x100, 1849703407, 1849703408,0);
mask_table[1849703407]=mask_entry(0x80, 3699406815, 3699406816,0);
mask_table[3699406815]=mask_entry(0x40, 7398813631, 7398813632,0);
mask_table[7398813631]=mask_entry( 0, -1, -1,224);
mask_table[7398813632]=mask_entry( 0, -1, -1,223);
mask_table[3699406816]=mask_entry( 0, -1, -1,162);
mask_table[1806350]=mask_entry(0x80, 3612701, 3612702,0);
mask_table[3612701]=mask_entry( 0, -1, -1,38);
mask_table[3612702]=mask_entry(0x40, 7225405, 7225406,0);
mask_table[7225405]=mask_entry(0x20, 14450811, 14450812,0);
mask_table[14450811]=mask_entry( 0, -1, -1,62);
mask_table[14450812]=mask_entry( 0, -1, -1,60);
mask_table[7225406]=mask_entry( 0, -1, -1,72);
mask_table[56448]=mask_entry( 0, -1, -1,130);
mask_table[14112]=mask_entry(0x8000, 28225, 28226,0);
mask_table[28225]=mask_entry(0x4000, 56451, 56452,0);
mask_table[56451]=mask_entry( 0, -1, -1,204);
mask_table[56452]=mask_entry(0x2000, 112905, 112906,0);
mask_table[112906]=mask_entry(0x1000, 225813, 225814,0);
mask_table[225814]=mask_entry(0x800, 451629, 451630,0);
mask_table[451629]=mask_entry( 0, -1, -1,56);
mask_table[451630]=mask_entry( 0, -1, -1,18);
mask_table[28226]=mask_entry( 0, -1, -1,208);
mask_table[7056]=mask_entry( 0, -1, -1,131);
mask_table[3528]=mask_entry(0x100000, 7057, 7058,0);
mask_table[7057]=mask_entry( 0, -1, -1,205);
mask_table[7058]=mask_entry( 0, -1, -1,129);
mask_table[220]=mask_entry(0x1000000, 441, 442,0);
mask_table[441]=mask_entry(0x800000, 883, 884,0);
mask_table[883]=mask_entry(0x400000, 1767, 1768,0);
mask_table[1767]=mask_entry(0x200000, 3535, 3536,0);
mask_table[3535]=mask_entry( 0, -1, -1,28);
mask_table[3536]=mask_entry( 0, -1, -1,27);
mask_table[1768]=mask_entry( 0, -1, -1,148);
mask_table[884]=mask_entry(0x400000, 1769, 1770,0);
mask_table[1769]=mask_entry(0x200000, 3539, 3540,0);
mask_table[3539]=mask_entry( 0, -1, -1,66);
mask_table[3540]=mask_entry( 0, -1, -1,61);
mask_table[6]=mask_entry(0x20000000, 13, 14,0);
mask_table[13]=mask_entry(0x4000000, 27, 28,0);
mask_table[27]=mask_entry(0x2000000, 55, 56,0);
mask_table[55]=mask_entry(0x80000000, 111, 112,0);
mask_table[111]=mask_entry( 0, -1, -1,84);
mask_table[112]=mask_entry(0x40000000, 225, 226,0);
mask_table[225]=mask_entry( 0, -1, -1,95);
mask_table[226]=mask_entry( 0, -1, -1,144);
mask_table[56]=mask_entry(0x40000000, 113, 114,0);
mask_table[113]=mask_entry(0x1000000, 227, 228,0);
mask_table[227]=mask_entry(0x800000, 455, 456,0);
mask_table[455]=mask_entry( 0, -1, -1,1);
mask_table[456]=mask_entry(0x400000, 913, 914,0);
mask_table[913]=mask_entry(0x200000, 1827, 1828,0);
mask_table[1827]=mask_entry(0x800, 3655, 3656,0);
mask_table[3655]=mask_entry(0x400, 7311, 7312,0);
mask_table[7311]=mask_entry( 0, -1, -1,50);
mask_table[7312]=mask_entry(0x100000, 14625, 14626,0);
mask_table[14625]=mask_entry( 0, -1, -1,36);
mask_table[14626]=mask_entry( 0, -1, -1,51);
mask_table[914]=mask_entry(0x200000, 1829, 1830,0);
mask_table[1829]=mask_entry(0x8000, 3659, 3660,0);
mask_table[3659]=mask_entry(0x4000, 7319, 7320,0);
mask_table[7319]=mask_entry(0x2000, 14639, 14640,0);
mask_table[14639]=mask_entry(0x1000, 29279, 29280,0);
mask_table[29279]=mask_entry(0x800, 58559, 58560,0);
mask_table[58560]=mask_entry(0x400, 117121, 117122,0);
mask_table[117121]=mask_entry( 0, -1, -1,214);
mask_table[117122]=mask_entry( 0, -1, -1,160);
mask_table[14640]=mask_entry(0x1000, 29281, 29282,0);
mask_table[29281]=mask_entry(0x800, 58563, 58564,0);
mask_table[58563]=mask_entry(0x400, 117127, 117128,0);
mask_table[117127]=mask_entry( 0, -1, -1,113);
mask_table[117128]=mask_entry( 0, -1, -1,116);
mask_table[58564]=mask_entry(0x400, 117129, 117130,0);
mask_table[117129]=mask_entry( 0, -1, -1,15);
mask_table[117130]=mask_entry( 0, -1, -1,153);
mask_table[7320]=mask_entry(0x2000, 14641, 14642,0);
mask_table[14641]=mask_entry(0x1000, 29283, 29284,0);
mask_table[29283]=mask_entry( 0, -1, -1,48);
mask_table[29284]=mask_entry( 0, -1, -1,49);
mask_table[228]=mask_entry(0x800000, 457, 458,0);
mask_table[457]=mask_entry(0x400000, 915, 916,0);
mask_table[915]=mask_entry(0x200000, 1831, 1832,0);
mask_table[1831]=mask_entry(0x8000, 3663, 3664,0);
mask_table[3663]=mask_entry(0x4000, 7327, 7328,0);
mask_table[7327]=mask_entry( 0, -1, -1,119);
mask_table[7328]=mask_entry( 0, -1, -1,133);
mask_table[3664]=mask_entry(0x4000, 7329, 7330,0);
mask_table[7329]=mask_entry( 0, -1, -1,132);
mask_table[7330]=mask_entry( 0, -1, -1,120);
mask_table[1832]=mask_entry(0x80000000, 3665, 3666,0);
mask_table[3666]=mask_entry(0x8000, 7333, 7334,0);
mask_table[7333]=mask_entry(0x4000, 14667, 14668,0);
mask_table[14667]=mask_entry( 0, -1, -1,163);
mask_table[14668]=mask_entry( 0, -1, -1,168);
mask_table[7334]=mask_entry(0x4000, 14669, 14670,0);
mask_table[14669]=mask_entry( 0, -1, -1,166);
mask_table[14670]=mask_entry( 0, -1, -1,165);
mask_table[916]=mask_entry( 0, -1, -1,167);
mask_table[458]=mask_entry(0x80000000, 917, 918,0);
mask_table[918]=mask_entry(0x400000, 1837, 1838,0);
mask_table[1837]=mask_entry(0x200000, 3675, 3676,0);
mask_table[3676]=mask_entry(0x8000, 7353, 7354,0);
mask_table[7353]=mask_entry(0x4000, 14707, 14708,0);
mask_table[14707]=mask_entry( 0, -1, -1,215);
mask_table[14708]=mask_entry( 0, -1, -1,219);
mask_table[7354]=mask_entry(0x4000, 14709, 14710,0);
mask_table[14709]=mask_entry( 0, -1, -1,217);
mask_table[14710]=mask_entry( 0, -1, -1,216);
mask_table[1838]=mask_entry( 0, -1, -1,218);
mask_table[114]=mask_entry(0x1000000, 229, 230,0);
mask_table[229]=mask_entry(0x800000, 459, 460,0);
mask_table[459]=mask_entry(0x400000, 919, 920,0);
mask_table[919]=mask_entry(0x200000, 1839, 1840,0);
mask_table[1839]=mask_entry(0x8000, 3679, 3680,0);
mask_table[3679]=mask_entry(0x4000, 7359, 7360,0);
mask_table[7359]=mask_entry(0x2000, 14719, 14720,0);
mask_table[14719]=mask_entry(0x1000, 29439, 29440,0);
mask_table[29439]=mask_entry(0x800, 58879, 58880,0);
mask_table[58879]=mask_entry(0x400, 117759, 117760,0);
mask_table[117759]=mask_entry(0x200, 235519, 235520,0);
mask_table[235519]=mask_entry( 0, -1, -1,155);
mask_table[235520]=mask_entry( 0, -1, -1,137);
mask_table[460]=mask_entry(0x400000, 921, 922,0);
mask_table[921]=mask_entry(0x200000, 1843, 1844,0);
mask_table[1843]=mask_entry(0x800, 3687, 3688,0);
mask_table[3687]=mask_entry(0x400, 7375, 7376,0);
mask_table[7375]=mask_entry(0x100000, 14751, 14752,0);
mask_table[14751]=mask_entry( 0, -1, -1,37);
mask_table[14752]=mask_entry( 0, -1, -1,52);
mask_table[7376]=mask_entry( 0, -1, -1,47);
mask_table[922]=mask_entry(0x200000, 1845, 1846,0);
mask_table[1845]=mask_entry(0x100000, 3691, 3692,0);
mask_table[3691]=mask_entry(0x80000, 7383, 7384,0);
mask_table[7383]=mask_entry(0x40000, 14767, 14768,0);
mask_table[14767]=mask_entry(0x20000, 29535, 29536,0);
mask_table[29535]=mask_entry(0x10000, 59071, 59072,0);
mask_table[59071]=mask_entry(0x8000, 118143, 118144,0);
mask_table[118143]=mask_entry(0x4000, 236287, 236288,0);
mask_table[236287]=mask_entry(0x2000, 472575, 472576,0);
mask_table[472575]=mask_entry(0x1000, 945151, 945152,0);
mask_table[945151]=mask_entry(0x800, 1890303, 1890304,0);
mask_table[1890303]=mask_entry(0x400, 3780607, 3780608,0);
mask_table[3780607]=mask_entry( 0, -1, -1,147);
mask_table[3780608]=mask_entry( 0, -1, -1,150);
mask_table[1890304]=mask_entry(0x80000000, 3780609, 3780610,0);
mask_table[3780609]=mask_entry( 0, -1, -1,149);
mask_table[3780610]=mask_entry( 0, -1, -1,151);
mask_table[945152]=mask_entry(0x800, 1890305, 1890306,0);
mask_table[1890305]=mask_entry(0x400, 3780611, 3780612,0);
mask_table[3780611]=mask_entry( 0, -1, -1,40);
mask_table[3780612]=mask_entry( 0, -1, -1,39);
mask_table[14]=mask_entry(0x4000000, 29, 30,0);
mask_table[29]=mask_entry(0x2000000, 59, 60,0);
mask_table[59]=mask_entry(0x80000000, 119, 120,0);
mask_table[119]=mask_entry(0x40000000, 239, 240,0);
mask_table[239]=mask_entry(0x1000000, 479, 480,0);
mask_table[479]=mask_entry(0x800000, 959, 960,0);
mask_table[959]=mask_entry(0x400000, 1919, 1920,0);
mask_table[1919]=mask_entry(0x200000, 3839, 3840,0);
mask_table[3839]=mask_entry(0x800, 7679, 7680,0);
mask_table[7679]=mask_entry(0x400, 15359, 15360,0);
mask_table[15359]=mask_entry( 0, -1, -1,188);
mask_table[15360]=mask_entry( 0, -1, -1,180);
mask_table[7680]=mask_entry( 0, -1, -1,185);
mask_table[3840]=mask_entry( 0, -1, -1,181);
mask_table[1920]=mask_entry(0x200000, 3841, 3842,0);
mask_table[3841]=mask_entry(0x800, 7683, 7684,0);
mask_table[7683]=mask_entry(0x400, 15367, 15368,0);
mask_table[15367]=mask_entry( 0, -1, -1,104);
mask_table[15368]=mask_entry( 0, -1, -1,86);
mask_table[7684]=mask_entry( 0, -1, -1,98);
mask_table[3842]=mask_entry( 0, -1, -1,87);
mask_table[960]=mask_entry(0x200000, 1921, 1922,0);
mask_table[1921]=mask_entry(0x800, 3843, 3844,0);
mask_table[3843]=mask_entry(0x400, 7687, 7688,0);
mask_table[7687]=mask_entry( 0, -1, -1,106);
mask_table[7688]=mask_entry( 0, -1, -1,90);
mask_table[3844]=mask_entry( 0, -1, -1,100);
mask_table[1922]=mask_entry( 0, -1, -1,91);
mask_table[240]=mask_entry(0x1000000, 481, 482,0);
mask_table[481]=mask_entry(0x800000, 963, 964,0);
mask_table[963]=mask_entry(0x400000, 1927, 1928,0);
mask_table[1927]=mask_entry(0x200000, 3855, 3856,0);
mask_table[3855]=mask_entry(0x800, 7711, 7712,0);
mask_table[7711]=mask_entry(0x400, 15423, 15424,0);
mask_table[15423]=mask_entry( 0, -1, -1,189);
mask_table[15424]=mask_entry( 0, -1, -1,182);
mask_table[7712]=mask_entry( 0, -1, -1,186);
mask_table[3856]=mask_entry( 0, -1, -1,183);
mask_table[1928]=mask_entry(0x200000, 3857, 3858,0);
mask_table[3857]=mask_entry(0x800, 7715, 7716,0);
mask_table[7715]=mask_entry(0x400, 15431, 15432,0);
mask_table[15431]=mask_entry( 0, -1, -1,105);
mask_table[15432]=mask_entry( 0, -1, -1,88);
mask_table[7716]=mask_entry( 0, -1, -1,99);
mask_table[3858]=mask_entry( 0, -1, -1,89);
mask_table[964]=mask_entry(0x200000, 1929, 1930,0);
mask_table[1929]=mask_entry(0x800, 3859, 3860,0);
mask_table[3859]=mask_entry(0x400, 7719, 7720,0);
mask_table[7719]=mask_entry( 0, -1, -1,107);
mask_table[7720]=mask_entry( 0, -1, -1,92);
mask_table[3860]=mask_entry( 0, -1, -1,101);
mask_table[1930]=mask_entry( 0, -1, -1,93);
mask_table[120]=mask_entry(0x1000000, 241, 242,0);
mask_table[241]=mask_entry(0x800000, 483, 484,0);
mask_table[483]=mask_entry(0x400000, 967, 968,0);
mask_table[967]=mask_entry(0x200000, 1935, 1936,0);
mask_table[1935]=mask_entry(0x800, 3871, 3872,0);
mask_table[3871]=mask_entry(0x400, 7743, 7744,0);
mask_table[7743]=mask_entry( 0, -1, -1,187);
mask_table[7744]=mask_entry( 0, -1, -1,178);
mask_table[3872]=mask_entry( 0, -1, -1,184);
mask_table[1936]=mask_entry( 0, -1, -1,179);
mask_table[968]=mask_entry(0x200000, 1937, 1938,0);
mask_table[1937]=mask_entry(0x800, 3875, 3876,0);
mask_table[3875]=mask_entry(0x400, 7751, 7752,0);
mask_table[7751]=mask_entry( 0, -1, -1,103);
mask_table[7752]=mask_entry( 0, -1, -1,83);
mask_table[3876]=mask_entry( 0, -1, -1,97);
mask_table[1938]=mask_entry( 0, -1, -1,85);
mask_table[484]=mask_entry(0x40000000, 969, 970,0);
mask_table[969]=mask_entry(0x400000, 1939, 1940,0);
mask_table[1939]=mask_entry(0x200000, 3879, 3880,0);
mask_table[3879]=mask_entry(0x800, 7759, 7760,0);
mask_table[7759]=mask_entry(0x400, 15519, 15520,0);
mask_table[15519]=mask_entry( 0, -1, -1,108);
mask_table[15520]=mask_entry( 0, -1, -1,94);
mask_table[7760]=mask_entry( 0, -1, -1,102);
mask_table[3880]=mask_entry( 0, -1, -1,96);
mask_table[970]=mask_entry(0x400000, 1941, 1942,0);
mask_table[1941]=mask_entry(0x200000, 3883, 3884,0);
mask_table[3883]=mask_entry( 0, -1, -1,146);
mask_table[3884]=mask_entry( 0, -1, -1,145);
mask_table[242]=mask_entry( 0, -1, -1,143);
mask_table[60]=mask_entry(0x40000000, 121, 122,0);
mask_table[121]=mask_entry(0x1000000, 243, 244,0);
mask_table[243]=mask_entry(0x800000, 487, 488,0);
mask_table[487]=mask_entry(0x400000, 975, 976,0);
mask_table[975]=mask_entry( 0, -1, -1,2);
mask_table[976]=mask_entry(0x200000, 1953, 1954,0);
mask_table[1953]=mask_entry(0x800, 3907, 3908,0);
mask_table[3907]=mask_entry( 0, -1, -1,33);
mask_table[3908]=mask_entry( 0, -1, -1,32);
mask_table[122]=mask_entry(0x1000000, 245, 246,0);
mask_table[245]=mask_entry(0x800000, 491, 492,0);
mask_table[491]=mask_entry(0x400000, 983, 984,0);
mask_table[983]=mask_entry(0x200000, 1967, 1968,0);
mask_table[1967]=mask_entry(0x8000, 3935, 3936,0);
mask_table[3935]=mask_entry(0x4000, 7871, 7872,0);
mask_table[7871]=mask_entry(0x2000, 15743, 15744,0);
mask_table[15743]=mask_entry(0x1000, 31487, 31488,0);
mask_table[31487]=mask_entry(0x800, 62975, 62976,0);
mask_table[62975]=mask_entry(0x400, 125951, 125952,0);
mask_table[125951]=mask_entry(0x200, 251903, 251904,0);
mask_table[251903]=mask_entry( 0, -1, -1,156);
mask_table[251904]=mask_entry( 0, -1, -1,138);
mask_table[984]=mask_entry(0x200000, 1969, 1970,0);
mask_table[1969]=mask_entry(0x800, 3939, 3940,0);
mask_table[3939]=mask_entry( 0, -1, -1,35);
mask_table[3940]=mask_entry( 0, -1, -1,34);
num of vaild leaves 225
Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224]) 225 0
missing indexes: [] 0
